/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 772.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 3.0], [27.6, 3.0], [27.7, 3.0], [27.8, 3.0], [27.9, 3.0], [28.0, 3.0], [28.1, 3.0], [28.2, 3.0], [28.3, 3.0], [28.4, 3.0], [28.5, 3.0], [28.6, 3.0], [28.7, 3.0], [28.8, 3.0], [28.9, 3.0], [29.0, 3.0], [29.1, 3.0], [29.2, 3.0], [29.3, 3.0], [29.4, 3.0], [29.5, 3.0], [29.6, 3.0], [29.7, 3.0], [29.8, 3.0], [29.9, 3.0], [30.0, 3.0], [30.1, 3.0], [30.2, 3.0], [30.3, 3.0], [30.4, 3.0], [30.5, 3.0], [30.6, 3.0], [30.7, 3.0], [30.8, 3.0], [30.9, 3.0], [31.0, 3.0], [31.1, 3.0], [31.2, 3.0], [31.3, 3.0], [31.4, 3.0], [31.5, 3.0], [31.6, 3.0], [31.7, 3.0], [31.8, 3.0], [31.9, 3.0], [32.0, 3.0], [32.1, 3.0], [32.2, 3.0], [32.3, 3.0], [32.4, 3.0], [32.5, 3.0], [32.6, 3.0], [32.7, 3.0], [32.8, 3.0], [32.9, 3.0], [33.0, 3.0], [33.1, 3.0], [33.2, 3.0], [33.3, 3.0], [33.4, 3.0], [33.5, 3.0], [33.6, 3.0], [33.7, 3.0], [33.8, 3.0], [33.9, 3.0], [34.0, 3.0], [34.1, 3.0], [34.2, 3.0], [34.3, 3.0], [34.4, 3.0], [34.5, 3.0], [34.6, 3.0], [34.7, 3.0], [34.8, 3.0], [34.9, 3.0], [35.0, 3.0], [35.1, 3.0], [35.2, 3.0], [35.3, 3.0], [35.4, 3.0], [35.5, 3.0], [35.6, 3.0], [35.7, 3.0], [35.8, 3.0], [35.9, 3.0], [36.0, 3.0], [36.1, 3.0], [36.2, 3.0], [36.3, 3.0], [36.4, 3.0], [36.5, 3.0], [36.6, 3.0], [36.7, 3.0], [36.8, 3.0], [36.9, 3.0], [37.0, 3.0], [37.1, 3.0], [37.2, 3.0], [37.3, 3.0], [37.4, 3.0], [37.5, 3.0], [37.6, 3.0], [37.7, 3.0], [37.8, 3.0], [37.9, 3.0], [38.0, 3.0], [38.1, 3.0], [38.2, 3.0], [38.3, 3.0], [38.4, 3.0], [38.5, 3.0], [38.6, 3.0], [38.7, 3.0], [38.8, 3.0], [38.9, 3.0], [39.0, 3.0], [39.1, 3.0], [39.2, 3.0], [39.3, 3.0], [39.4, 3.0], [39.5, 3.0], [39.6, 3.0], [39.7, 3.0], [39.8, 3.0], [39.9, 3.0], [40.0, 3.0], [40.1, 3.0], [40.2, 3.0], [40.3, 3.0], [40.4, 3.0], [40.5, 3.0], [40.6, 3.0], [40.7, 3.0], [40.8, 3.0], [40.9, 3.0], [41.0, 3.0], [41.1, 3.0], [41.2, 3.0], [41.3, 3.0], [41.4, 3.0], [41.5, 3.0], [41.6, 3.0], [41.7, 3.0], [41.8, 3.0], [41.9, 3.0], [42.0, 3.0], [42.1, 3.0], [42.2, 3.0], [42.3, 3.0], [42.4, 3.0], [42.5, 3.0], [42.6, 3.0], [42.7, 3.0], [42.8, 3.0], [42.9, 3.0], [43.0, 3.0], [43.1, 3.0], [43.2, 3.0], [43.3, 3.0], [43.4, 3.0], [43.5, 3.0], [43.6, 3.0], [43.7, 3.0], [43.8, 3.0], [43.9, 3.0], [44.0, 3.0], [44.1, 3.0], [44.2, 3.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 3.0], [57.1, 3.0], [57.2, 3.0], [57.3, 3.0], [57.4, 3.0], [57.5, 3.0], [57.6, 3.0], [57.7, 3.0], [57.8, 3.0], [57.9, 3.0], [58.0, 3.0], [58.1, 3.0], [58.2, 3.0], [58.3, 3.0], [58.4, 3.0], [58.5, 3.0], [58.6, 3.0], [58.7, 3.0], [58.8, 3.0], [58.9, 3.0], [59.0, 3.0], [59.1, 3.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 3.0], [60.0, 3.0], [60.1, 3.0], [60.2, 3.0], [60.3, 3.0], [60.4, 3.0], [60.5, 3.0], [60.6, 3.0], [60.7, 3.0], [60.8, 3.0], [60.9, 3.0], [61.0, 3.0], [61.1, 3.0], [61.2, 3.0], [61.3, 3.0], [61.4, 3.0], [61.5, 3.0], [61.6, 3.0], [61.7, 3.0], [61.8, 3.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 3.0], [64.4, 3.0], [64.5, 3.0], [64.6, 3.0], [64.7, 3.0], [64.8, 3.0], [64.9, 3.0], [65.0, 3.0], [65.1, 3.0], [65.2, 3.0], [65.3, 3.0], [65.4, 3.0], [65.5, 3.0], [65.6, 3.0], [65.7, 3.0], [65.8, 3.0], [65.9, 3.0], [66.0, 3.0], [66.1, 3.0], [66.2, 3.0], [66.3, 3.0], [66.4, 3.0], [66.5, 3.0], [66.6, 3.0], [66.7, 3.0], [66.8, 3.0], [66.9, 3.0], [67.0, 3.0], [67.1, 3.0], [67.2, 3.0], [67.3, 3.0], [67.4, 3.0], [67.5, 3.0], [67.6, 3.0], [67.7, 4.0], [67.8, 4.0], [67.9, 4.0], [68.0, 4.0], [68.1, 4.0], [68.2, 4.0], [68.3, 4.0], [68.4, 4.0], [68.5, 4.0], [68.6, 4.0], [68.7, 4.0], [68.8, 4.0], [68.9, 4.0], [69.0, 4.0], [69.1, 4.0], [69.2, 4.0], [69.3, 4.0], [69.4, 4.0], [69.5, 4.0], [69.6, 4.0], [69.7, 4.0], [69.8, 4.0], [69.9, 4.0], [70.0, 4.0], [70.1, 4.0], [70.2, 4.0], [70.3, 4.0], [70.4, 4.0], [70.5, 4.0], [70.6, 4.0], [70.7, 4.0], [70.8, 4.0], [70.9, 4.0], [71.0, 4.0], [71.1, 4.0], [71.2, 4.0], [71.3, 4.0], [71.4, 4.0], [71.5, 4.0], [71.6, 4.0], [71.7, 4.0], [71.8, 4.0], [71.9, 4.0], [72.0, 4.0], [72.1, 4.0], [72.2, 4.0], [72.3, 4.0], [72.4, 4.0], [72.5, 4.0], [72.6, 4.0], [72.7, 4.0], [72.8, 4.0], [72.9, 4.0], [73.0, 4.0], [73.1, 4.0], [73.2, 4.0], [73.3, 4.0], [73.4, 4.0], [73.5, 4.0], [73.6, 4.0], [73.7, 4.0], [73.8, 4.0], [73.9, 4.0], [74.0, 4.0], [74.1, 4.0], [74.2, 4.0], [74.3, 4.0], [74.4, 4.0], [74.5, 4.0], [74.6, 4.0], [74.7, 4.0], [74.8, 4.0], [74.9, 4.0], [75.0, 4.0], [75.1, 4.0], [75.2, 4.0], [75.3, 4.0], [75.4, 4.0], [75.5, 4.0], [75.6, 4.0], [75.7, 4.0], [75.8, 4.0], [75.9, 4.0], [76.0, 4.0], [76.1, 4.0], [76.2, 4.0], [76.3, 4.0], [76.4, 4.0], [76.5, 4.0], [76.6, 4.0], [76.7, 4.0], [76.8, 4.0], [76.9, 4.0], [77.0, 4.0], [77.1, 4.0], [77.2, 4.0], [77.3, 4.0], [77.4, 4.0], [77.5, 4.0], [77.6, 4.0], [77.7, 4.0], [77.8, 4.0], [77.9, 4.0], [78.0, 4.0], [78.1, 4.0], [78.2, 4.0], [78.3, 4.0], [78.4, 4.0], [78.5, 4.0], [78.6, 4.0], [78.7, 4.0], [78.8, 4.0], [78.9, 4.0], [79.0, 4.0], [79.1, 4.0], [79.2, 4.0], [79.3, 4.0], [79.4, 4.0], [79.5, 4.0], [79.6, 4.0], [79.7, 4.0], [79.8, 4.0], [79.9, 4.0], [80.0, 4.0], [80.1, 4.0], [80.2, 4.0], [80.3, 4.0], [80.4, 4.0], [80.5, 4.0], [80.6, 4.0], [80.7, 4.0], [80.8, 4.0], [80.9, 4.0], [81.0, 4.0], [81.1, 4.0], [81.2, 4.0], [81.3, 4.0], [81.4, 4.0], [81.5, 4.0], [81.6, 4.0], [81.7, 4.0], [81.8, 4.0], [81.9, 4.0], [82.0, 4.0], [82.1, 4.0], [82.2, 4.0], [82.3, 4.0], [82.4, 4.0], [82.5, 4.0], [82.6, 4.0], [82.7, 4.0], [82.8, 4.0], [82.9, 4.0], [83.0, 4.0], [83.1, 4.0], [83.2, 4.0], [83.3, 4.0], [83.4, 4.0], [83.5, 4.0], [83.6, 4.0], [83.7, 4.0], [83.8, 4.0], [83.9, 4.0], [84.0, 4.0], [84.1, 4.0], [84.2, 4.0], [84.3, 4.0], [84.4, 4.0], [84.5, 4.0], [84.6, 4.0], [84.7, 4.0], [84.8, 4.0], [84.9, 4.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 4.0], [85.4, 4.0], [85.5, 4.0], [85.6, 4.0], [85.7, 4.0], [85.8, 4.0], [85.9, 4.0], [86.0, 5.0], [86.1, 5.0], [86.2, 5.0], [86.3, 5.0], [86.4, 5.0], [86.5, 5.0], [86.6, 5.0], [86.7, 5.0], [86.8, 5.0], [86.9, 5.0], [87.0, 5.0], [87.1, 5.0], [87.2, 5.0], [87.3, 5.0], [87.4, 5.0], [87.5, 5.0], [87.6, 5.0], [87.7, 5.0], [87.8, 5.0], [87.9, 5.0], [88.0, 5.0], [88.1, 5.0], [88.2, 5.0], [88.3, 5.0], [88.4, 5.0], [88.5, 5.0], [88.6, 5.0], [88.7, 5.0], [88.8, 5.0], [88.9, 5.0], [89.0, 5.0], [89.1, 5.0], [89.2, 5.0], [89.3, 5.0], [89.4, 5.0], [89.5, 5.0], [89.6, 5.0], [89.7, 5.0], [89.8, 5.0], [89.9, 5.0], [90.0, 5.0], [90.1, 5.0], [90.2, 5.0], [90.3, 5.0], [90.4, 5.0], [90.5, 5.0], [90.6, 5.0], [90.7, 5.0], [90.8, 5.0], [90.9, 5.0], [91.0, 5.0], [91.1, 5.0], [91.2, 5.0], [91.3, 5.0], [91.4, 6.0], [91.5, 6.0], [91.6, 6.0], [91.7, 6.0], [91.8, 6.0], [91.9, 6.0], [92.0, 6.0], [92.1, 6.0], [92.2, 6.0], [92.3, 6.0], [92.4, 6.0], [92.5, 6.0], [92.6, 6.0], [92.7, 6.0], [92.8, 6.0], [92.9, 6.0], [93.0, 7.0], [93.1, 7.0], [93.2, 7.0], [93.3, 7.0], [93.4, 7.0], [93.5, 7.0], [93.6, 7.0], [93.7, 7.0], [93.8, 7.0], [93.9, 7.0], [94.0, 7.0], [94.1, 8.0], [94.2, 8.0], [94.3, 8.0], [94.4, 8.0], [94.5, 8.0], [94.6, 8.0], [94.7, 8.0], [94.8, 8.0], [94.9, 8.0], [95.0, 8.0], [95.1, 8.0], [95.2, 8.0], [95.3, 8.0], [95.4, 9.0], [95.5, 9.0], [95.6, 9.0], [95.7, 9.0], [95.8, 9.0], [95.9, 9.0], [96.0, 9.0], [96.1, 10.0], [96.2, 10.0], [96.3, 10.0], [96.4, 10.0], [96.5, 10.0], [96.6, 11.0], [96.7, 11.0], [96.8, 11.0], [96.9, 11.0], [97.0, 12.0], [97.1, 12.0], [97.2, 12.0], [97.3, 12.0], [97.4, 12.0], [97.5, 13.0], [97.6, 13.0], [97.7, 13.0], [97.8, 13.0], [97.9, 14.0], [98.0, 14.0], [98.1, 14.0], [98.2, 15.0], [98.3, 15.0], [98.4, 16.0], [98.5, 16.0], [98.6, 16.0], [98.7, 17.0], [98.8, 17.0], [98.9, 18.0], [99.0, 18.0], [99.1, 19.0], [99.2, 19.0], [99.3, 20.0], [99.4, 21.0], [99.5, 22.0], [99.6, 23.0], [99.7, 24.0], [99.8, 25.0], [99.9, 28.0]], "isOverall": false, "label": "SpanNames", "isController": false}, {"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 3.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 4.0], [11.3, 4.0], [11.4, 4.0], [11.5, 4.0], [11.6, 4.0], [11.7, 4.0], [11.8, 4.0], [11.9, 4.0], [12.0, 4.0], [12.1, 4.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 5.0], [30.9, 5.0], [31.0, 5.0], [31.1, 5.0], [31.2, 5.0], [31.3, 5.0], [31.4, 5.0], [31.5, 5.0], [31.6, 5.0], [31.7, 5.0], [31.8, 5.0], [31.9, 5.0], [32.0, 5.0], [32.1, 5.0], [32.2, 5.0], [32.3, 5.0], [32.4, 5.0], [32.5, 5.0], [32.6, 5.0], [32.7, 5.0], [32.8, 5.0], [32.9, 5.0], [33.0, 5.0], [33.1, 5.0], [33.2, 5.0], [33.3, 5.0], [33.4, 5.0], [33.5, 5.0], [33.6, 5.0], [33.7, 5.0], [33.8, 5.0], [33.9, 5.0], [34.0, 5.0], [34.1, 5.0], [34.2, 5.0], [34.3, 5.0], [34.4, 5.0], [34.5, 5.0], [34.6, 5.0], [34.7, 5.0], [34.8, 5.0], [34.9, 5.0], [35.0, 5.0], [35.1, 5.0], [35.2, 5.0], [35.3, 5.0], [35.4, 5.0], [35.5, 5.0], [35.6, 5.0], [35.7, 5.0], [35.8, 5.0], [35.9, 5.0], [36.0, 5.0], [36.1, 5.0], [36.2, 5.0], [36.3, 5.0], [36.4, 5.0], [36.5, 5.0], [36.6, 5.0], [36.7, 5.0], [36.8, 5.0], [36.9, 5.0], [37.0, 5.0], [37.1, 5.0], [37.2, 5.0], [37.3, 5.0], [37.4, 5.0], [37.5, 5.0], [37.6, 5.0], [37.7, 5.0], [37.8, 5.0], [37.9, 5.0], [38.0, 5.0], [38.1, 5.0], [38.2, 5.0], [38.3, 5.0], [38.4, 5.0], [38.5, 5.0], [38.6, 5.0], [38.7, 5.0], [38.8, 5.0], [38.9, 5.0], [39.0, 5.0], [39.1, 5.0], [39.2, 5.0], [39.3, 5.0], [39.4, 5.0], [39.5, 5.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 5.0], [40.1, 5.0], [40.2, 5.0], [40.3, 5.0], [40.4, 5.0], [40.5, 5.0], [40.6, 5.0], [40.7, 5.0], [40.8, 5.0], [40.9, 5.0], [41.0, 5.0], [41.1, 5.0], [41.2, 5.0], [41.3, 5.0], [41.4, 5.0], [41.5, 5.0], [41.6, 5.0], [41.7, 5.0], [41.8, 5.0], [41.9, 5.0], [42.0, 5.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 5.0], [51.3, 5.0], [51.4, 5.0], [51.5, 5.0], [51.6, 5.0], [51.7, 5.0], [51.8, 5.0], [51.9, 5.0], [52.0, 5.0], [52.1, 5.0], [52.2, 5.0], [52.3, 5.0], [52.4, 5.0], [52.5, 5.0], [52.6, 5.0], [52.7, 5.0], [52.8, 5.0], [52.9, 5.0], [53.0, 5.0], [53.1, 5.0], [53.2, 5.0], [53.3, 5.0], [53.4, 5.0], [53.5, 5.0], [53.6, 5.0], [53.7, 5.0], [53.8, 5.0], [53.9, 5.0], [54.0, 5.0], [54.1, 5.0], [54.2, 5.0], [54.3, 5.0], [54.4, 5.0], [54.5, 5.0], [54.6, 5.0], [54.7, 5.0], [54.8, 5.0], [54.9, 5.0], [55.0, 5.0], [55.1, 5.0], [55.2, 5.0], [55.3, 5.0], [55.4, 5.0], [55.5, 5.0], [55.6, 5.0], [55.7, 5.0], [55.8, 5.0], [55.9, 6.0], [56.0, 6.0], [56.1, 6.0], [56.2, 6.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 6.0], [61.3, 6.0], [61.4, 6.0], [61.5, 6.0], [61.6, 6.0], [61.7, 6.0], [61.8, 6.0], [61.9, 6.0], [62.0, 6.0], [62.1, 6.0], [62.2, 6.0], [62.3, 6.0], [62.4, 6.0], [62.5, 6.0], [62.6, 6.0], [62.7, 6.0], [62.8, 6.0], [62.9, 6.0], [63.0, 6.0], [63.1, 6.0], [63.2, 6.0], [63.3, 6.0], [63.4, 6.0], [63.5, 6.0], [63.6, 6.0], [63.7, 6.0], [63.8, 6.0], [63.9, 6.0], [64.0, 6.0], [64.1, 6.0], [64.2, 6.0], [64.3, 6.0], [64.4, 6.0], [64.5, 6.0], [64.6, 6.0], [64.7, 6.0], [64.8, 6.0], [64.9, 6.0], [65.0, 6.0], [65.1, 6.0], [65.2, 6.0], [65.3, 6.0], [65.4, 6.0], [65.5, 6.0], [65.6, 6.0], [65.7, 6.0], [65.8, 6.0], [65.9, 6.0], [66.0, 6.0], [66.1, 6.0], [66.2, 6.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 7.0], [68.2, 7.0], [68.3, 7.0], [68.4, 7.0], [68.5, 7.0], [68.6, 7.0], [68.7, 7.0], [68.8, 7.0], [68.9, 7.0], [69.0, 7.0], [69.1, 7.0], [69.2, 7.0], [69.3, 7.0], [69.4, 7.0], [69.5, 7.0], [69.6, 7.0], [69.7, 8.0], [69.8, 8.0], [69.9, 8.0], [70.0, 8.0], [70.1, 8.0], [70.2, 8.0], [70.3, 8.0], [70.4, 8.0], [70.5, 8.0], [70.6, 8.0], [70.7, 8.0], [70.8, 8.0], [70.9, 8.0], [71.0, 9.0], [71.1, 9.0], [71.2, 9.0], [71.3, 9.0], [71.4, 9.0], [71.5, 9.0], [71.6, 9.0], [71.7, 9.0], [71.8, 9.0], [71.9, 9.0], [72.0, 9.0], [72.1, 9.0], [72.2, 10.0], [72.3, 10.0], [72.4, 10.0], [72.5, 10.0], [72.6, 10.0], [72.7, 10.0], [72.8, 10.0], [72.9, 10.0], [73.0, 11.0], [73.1, 11.0], [73.2, 11.0], [73.3, 11.0], [73.4, 11.0], [73.5, 12.0], [73.6, 12.0], [73.7, 12.0], [73.8, 12.0], [73.9, 13.0], [74.0, 13.0], [74.1, 14.0], [74.2, 14.0], [74.3, 14.0], [74.4, 15.0], [74.5, 16.0], [74.6, 17.0], [74.7, 18.0], [74.8, 18.0], [74.9, 21.0], [75.0, 23.0], [75.1, 28.0], [75.2, 54.0], [75.3, 219.0], [75.4, 496.0], [75.5, 503.0], [75.6, 507.0], [75.7, 510.0], [75.8, 513.0], [75.9, 515.0], [76.0, 517.0], [76.1, 518.0], [76.2, 521.0], [76.3, 522.0], [76.4, 524.0], [76.5, 527.0], [76.6, 528.0], [76.7, 529.0], [76.8, 531.0], [76.9, 532.0], [77.0, 534.0], [77.1, 535.0], [77.2, 537.0], [77.3, 539.0], [77.4, 539.0], [77.5, 541.0], [77.6, 541.0], [77.7, 542.0], [77.8, 544.0], [77.9, 545.0], [78.0, 546.0], [78.1, 546.0], [78.2, 547.0], [78.3, 548.0], [78.4, 549.0], [78.5, 550.0], [78.6, 551.0], [78.7, 551.0], [78.8, 552.0], [78.9, 553.0], [79.0, 554.0], [79.1, 555.0], [79.2, 556.0], [79.3, 557.0], [79.4, 558.0], [79.5, 558.0], [79.6, 559.0], [79.7, 560.0], [79.8, 561.0], [79.9, 562.0], [80.0, 563.0], [80.1, 563.0], [80.2, 564.0], [80.3, 564.0], [80.4, 565.0], [80.5, 566.0], [80.6, 567.0], [80.7, 567.0], [80.8, 568.0], [80.9, 569.0], [81.0, 569.0], [81.1, 570.0], [81.2, 571.0], [81.3, 571.0], [81.4, 572.0], [81.5, 573.0], [81.6, 574.0], [81.7, 574.0], [81.8, 575.0], [81.9, 576.0], [82.0, 577.0], [82.1, 577.0], [82.2, 578.0], [82.3, 579.0], [82.4, 579.0], [82.5, 580.0], [82.6, 580.0], [82.7, 581.0], [82.8, 582.0], [82.9, 583.0], [83.0, 583.0], [83.1, 584.0], [83.2, 584.0], [83.3, 585.0], [83.4, 586.0], [83.5, 586.0], [83.6, 587.0], [83.7, 587.0], [83.8, 588.0], [83.9, 589.0], [84.0, 590.0], [84.1, 590.0], [84.2, 591.0], [84.3, 592.0], [84.4, 592.0], [84.5, 593.0], [84.6, 593.0], [84.7, 594.0], [84.8, 594.0], [84.9, 595.0], [85.0, 596.0], [85.1, 596.0], [85.2, 597.0], [85.3, 598.0], [85.4, 599.0], [85.5, 599.0], [85.6, 600.0], [85.7, 601.0], [85.8, 601.0], [85.9, 601.0], [86.0, 602.0], [86.1, 602.0], [86.2, 603.0], [86.3, 604.0], [86.4, 604.0], [86.5, 605.0], [86.6, 606.0], [86.7, 606.0], [86.8, 607.0], [86.9, 608.0], [87.0, 609.0], [87.1, 609.0], [87.2, 610.0], [87.3, 611.0], [87.4, 611.0], [87.5, 612.0], [87.6, 613.0], [87.7, 613.0], [87.8, 614.0], [87.9, 615.0], [88.0, 615.0], [88.1, 616.0], [88.2, 616.0], [88.3, 617.0], [88.4, 618.0], [88.5, 618.0], [88.6, 619.0], [88.7, 619.0], [88.8, 620.0], [88.9, 621.0], [89.0, 621.0], [89.1, 622.0], [89.2, 622.0], [89.3, 623.0], [89.4, 624.0], [89.5, 624.0], [89.6, 625.0], [89.7, 626.0], [89.8, 626.0], [89.9, 627.0], [90.0, 628.0], [90.1, 628.0], [90.2, 629.0], [90.3, 629.0], [90.4, 630.0], [90.5, 630.0], [90.6, 631.0], [90.7, 632.0], [90.8, 633.0], [90.9, 633.0], [91.0, 634.0], [91.1, 635.0], [91.2, 636.0], [91.3, 636.0], [91.4, 637.0], [91.5, 637.0], [91.6, 638.0], [91.7, 639.0], [91.8, 639.0], [91.9, 640.0], [92.0, 640.0], [92.1, 641.0], [92.2, 641.0], [92.3, 642.0], [92.4, 643.0], [92.5, 643.0], [92.6, 644.0], [92.7, 644.0], [92.8, 645.0], [92.9, 646.0], [93.0, 647.0], [93.1, 648.0], [93.2, 648.0], [93.3, 649.0], [93.4, 649.0], [93.5, 650.0], [93.6, 651.0], [93.7, 651.0], [93.8, 652.0], [93.9, 653.0], [94.0, 653.0], [94.1, 654.0], [94.2, 655.0], [94.3, 656.0], [94.4, 656.0], [94.5, 657.0], [94.6, 658.0], [94.7, 659.0], [94.8, 659.0], [94.9, 660.0], [95.0, 661.0], [95.1, 661.0], [95.2, 662.0], [95.3, 663.0], [95.4, 663.0], [95.5, 664.0], [95.6, 665.0], [95.7, 666.0], [95.8, 667.0], [95.9, 667.0], [96.0, 668.0], [96.1, 669.0], [96.2, 670.0], [96.3, 671.0], [96.4, 672.0], [96.5, 673.0], [96.6, 674.0], [96.7, 674.0], [96.8, 676.0], [96.9, 676.0], [97.0, 677.0], [97.1, 678.0], [97.2, 679.0], [97.3, 680.0], [97.4, 681.0], [97.5, 683.0], [97.6, 684.0], [97.7, 684.0], [97.8, 686.0], [97.9, 687.0], [98.0, 688.0], [98.1, 689.0], [98.2, 690.0], [98.3, 691.0], [98.4, 692.0], [98.5, 693.0], [98.6, 695.0], [98.7, 696.0], [98.8, 698.0], [98.9, 699.0], [99.0, 701.0], [99.1, 703.0], [99.2, 705.0], [99.3, 707.0], [99.4, 709.0], [99.5, 711.0], [99.6, 714.0], [99.7, 717.0], [99.8, 719.0], [99.9, 723.0]], "isOverall": false, "label": "ServiceNames", "isController": false}, {"data": [[0.0, 11.0], [0.1, 12.0], [0.2, 12.0], [0.3, 12.0], [0.4, 13.0], [0.5, 13.0], [0.6, 13.0], [0.7, 13.0], [0.8, 13.0], [0.9, 13.0], [1.0, 13.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 13.0], [1.5, 13.0], [1.6, 13.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 13.0], [2.1, 13.0], [2.2, 13.0], [2.3, 13.0], [2.4, 13.0], [2.5, 13.0], [2.6, 13.0], [2.7, 13.0], [2.8, 13.0], [2.9, 13.0], [3.0, 13.0], [3.1, 13.0], [3.2, 13.0], [3.3, 13.0], [3.4, 13.0], [3.5, 13.0], [3.6, 13.0], [3.7, 13.0], [3.8, 13.0], [3.9, 14.0], [4.0, 14.0], [4.1, 14.0], [4.2, 14.0], [4.3, 14.0], [4.4, 14.0], [4.5, 14.0], [4.6, 14.0], [4.7, 14.0], [4.8, 14.0], [4.9, 14.0], [5.0, 14.0], [5.1, 14.0], [5.2, 14.0], [5.3, 14.0], [5.4, 14.0], [5.5, 14.0], [5.6, 14.0], [5.7, 14.0], [5.8, 14.0], [5.9, 14.0], [6.0, 14.0], [6.1, 14.0], [6.2, 14.0], [6.3, 14.0], [6.4, 14.0], [6.5, 14.0], [6.6, 14.0], [6.7, 14.0], [6.8, 14.0], [6.9, 14.0], [7.0, 14.0], [7.1, 14.0], [7.2, 14.0], [7.3, 14.0], [7.4, 14.0], [7.5, 14.0], [7.6, 14.0], [7.7, 14.0], [7.8, 14.0], [7.9, 14.0], [8.0, 14.0], [8.1, 14.0], [8.2, 14.0], [8.3, 14.0], [8.4, 14.0], [8.5, 14.0], [8.6, 14.0], [8.7, 14.0], [8.8, 14.0], [8.9, 14.0], [9.0, 14.0], [9.1, 14.0], [9.2, 14.0], [9.3, 14.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 14.0], [10.0, 14.0], [10.1, 14.0], [10.2, 14.0], [10.3, 14.0], [10.4, 14.0], [10.5, 14.0], [10.6, 14.0], [10.7, 14.0], [10.8, 14.0], [10.9, 14.0], [11.0, 14.0], [11.1, 14.0], [11.2, 14.0], [11.3, 14.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 14.0], [14.2, 14.0], [14.3, 14.0], [14.4, 14.0], [14.5, 14.0], [14.6, 14.0], [14.7, 14.0], [14.8, 14.0], [14.9, 14.0], [15.0, 14.0], [15.1, 14.0], [15.2, 14.0], [15.3, 14.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 14.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 14.0], [17.0, 14.0], [17.1, 14.0], [17.2, 14.0], [17.3, 14.0], [17.4, 14.0], [17.5, 14.0], [17.6, 14.0], [17.7, 14.0], [17.8, 14.0], [17.9, 14.0], [18.0, 14.0], [18.1, 14.0], [18.2, 14.0], [18.3, 14.0], [18.4, 14.0], [18.5, 14.0], [18.6, 14.0], [18.7, 14.0], [18.8, 14.0], [18.9, 14.0], [19.0, 14.0], [19.1, 14.0], [19.2, 14.0], [19.3, 14.0], [19.4, 14.0], [19.5, 14.0], [19.6, 14.0], [19.7, 14.0], [19.8, 14.0], [19.9, 14.0], [20.0, 14.0], [20.1, 14.0], [20.2, 14.0], [20.3, 14.0], [20.4, 14.0], [20.5, 14.0], [20.6, 14.0], [20.7, 14.0], [20.8, 14.0], [20.9, 14.0], [21.0, 14.0], [21.1, 14.0], [21.2, 14.0], [21.3, 14.0], [21.4, 14.0], [21.5, 14.0], [21.6, 14.0], [21.7, 14.0], [21.8, 14.0], [21.9, 15.0], [22.0, 15.0], [22.1, 15.0], [22.2, 15.0], [22.3, 15.0], [22.4, 15.0], [22.5, 15.0], [22.6, 15.0], [22.7, 15.0], [22.8, 15.0], [22.9, 15.0], [23.0, 15.0], [23.1, 15.0], [23.2, 15.0], [23.3, 15.0], [23.4, 15.0], [23.5, 15.0], [23.6, 15.0], [23.7, 15.0], [23.8, 15.0], [23.9, 15.0], [24.0, 15.0], [24.1, 15.0], [24.2, 15.0], [24.3, 15.0], [24.4, 15.0], [24.5, 15.0], [24.6, 15.0], [24.7, 15.0], [24.8, 15.0], [24.9, 15.0], [25.0, 15.0], [25.1, 15.0], [25.2, 15.0], [25.3, 15.0], [25.4, 15.0], [25.5, 15.0], [25.6, 15.0], [25.7, 15.0], [25.8, 15.0], [25.9, 15.0], [26.0, 15.0], [26.1, 15.0], [26.2, 15.0], [26.3, 15.0], [26.4, 15.0], [26.5, 15.0], [26.6, 15.0], [26.7, 15.0], [26.8, 15.0], [26.9, 15.0], [27.0, 15.0], [27.1, 15.0], [27.2, 15.0], [27.3, 15.0], [27.4, 15.0], [27.5, 15.0], [27.6, 15.0], [27.7, 15.0], [27.8, 15.0], [27.9, 15.0], [28.0, 15.0], [28.1, 15.0], [28.2, 15.0], [28.3, 15.0], [28.4, 15.0], [28.5, 15.0], [28.6, 15.0], [28.7, 15.0], [28.8, 15.0], [28.9, 15.0], [29.0, 15.0], [29.1, 15.0], [29.2, 15.0], [29.3, 15.0], [29.4, 15.0], [29.5, 15.0], [29.6, 15.0], [29.7, 15.0], [29.8, 15.0], [29.9, 15.0], [30.0, 15.0], [30.1, 15.0], [30.2, 15.0], [30.3, 15.0], [30.4, 15.0], [30.5, 15.0], [30.6, 15.0], [30.7, 15.0], [30.8, 15.0], [30.9, 15.0], [31.0, 15.0], [31.1, 15.0], [31.2, 15.0], [31.3, 15.0], [31.4, 15.0], [31.5, 15.0], [31.6, 15.0], [31.7, 15.0], [31.8, 15.0], [31.9, 15.0], [32.0, 15.0], [32.1, 15.0], [32.2, 15.0], [32.3, 15.0], [32.4, 15.0], [32.5, 15.0], [32.6, 15.0], [32.7, 15.0], [32.8, 15.0], [32.9, 15.0], [33.0, 15.0], [33.1, 15.0], [33.2, 15.0], [33.3, 15.0], [33.4, 15.0], [33.5, 15.0], [33.6, 15.0], [33.7, 15.0], [33.8, 15.0], [33.9, 15.0], [34.0, 15.0], [34.1, 15.0], [34.2, 15.0], [34.3, 15.0], [34.4, 15.0], [34.5, 15.0], [34.6, 15.0], [34.7, 15.0], [34.8, 15.0], [34.9, 15.0], [35.0, 15.0], [35.1, 15.0], [35.2, 15.0], [35.3, 15.0], [35.4, 15.0], [35.5, 15.0], [35.6, 15.0], [35.7, 15.0], [35.8, 15.0], [35.9, 15.0], [36.0, 15.0], [36.1, 15.0], [36.2, 15.0], [36.3, 15.0], [36.4, 15.0], [36.5, 15.0], [36.6, 15.0], [36.7, 15.0], [36.8, 15.0], [36.9, 15.0], [37.0, 15.0], [37.1, 15.0], [37.2, 15.0], [37.3, 15.0], [37.4, 15.0], [37.5, 15.0], [37.6, 15.0], [37.7, 15.0], [37.8, 15.0], [37.9, 15.0], [38.0, 15.0], [38.1, 15.0], [38.2, 15.0], [38.3, 15.0], [38.4, 15.0], [38.5, 15.0], [38.6, 15.0], [38.7, 15.0], [38.8, 15.0], [38.9, 15.0], [39.0, 15.0], [39.1, 15.0], [39.2, 15.0], [39.3, 15.0], [39.4, 15.0], [39.5, 15.0], [39.6, 15.0], [39.7, 15.0], [39.8, 15.0], [39.9, 15.0], [40.0, 15.0], [40.1, 15.0], [40.2, 15.0], [40.3, 15.0], [40.4, 15.0], [40.5, 15.0], [40.6, 15.0], [40.7, 15.0], [40.8, 15.0], [40.9, 15.0], [41.0, 15.0], [41.1, 15.0], [41.2, 15.0], [41.3, 15.0], [41.4, 15.0], [41.5, 15.0], [41.6, 15.0], [41.7, 15.0], [41.8, 15.0], [41.9, 15.0], [42.0, 15.0], [42.1, 15.0], [42.2, 15.0], [42.3, 15.0], [42.4, 15.0], [42.5, 15.0], [42.6, 15.0], [42.7, 15.0], [42.8, 15.0], [42.9, 15.0], [43.0, 15.0], [43.1, 15.0], [43.2, 15.0], [43.3, 15.0], [43.4, 15.0], [43.5, 15.0], [43.6, 15.0], [43.7, 15.0], [43.8, 15.0], [43.9, 15.0], [44.0, 15.0], [44.1, 16.0], [44.2, 16.0], [44.3, 16.0], [44.4, 16.0], [44.5, 16.0], [44.6, 16.0], [44.7, 16.0], [44.8, 16.0], [44.9, 16.0], [45.0, 16.0], [45.1, 16.0], [45.2, 16.0], [45.3, 16.0], [45.4, 16.0], [45.5, 16.0], [45.6, 16.0], [45.7, 16.0], [45.8, 16.0], [45.9, 16.0], [46.0, 16.0], [46.1, 16.0], [46.2, 16.0], [46.3, 16.0], [46.4, 16.0], [46.5, 16.0], [46.6, 16.0], [46.7, 16.0], [46.8, 16.0], [46.9, 16.0], [47.0, 16.0], [47.1, 16.0], [47.2, 16.0], [47.3, 16.0], [47.4, 16.0], [47.5, 16.0], [47.6, 16.0], [47.7, 16.0], [47.8, 16.0], [47.9, 16.0], [48.0, 16.0], [48.1, 16.0], [48.2, 16.0], [48.3, 16.0], [48.4, 16.0], [48.5, 16.0], [48.6, 16.0], [48.7, 16.0], [48.8, 16.0], [48.9, 16.0], [49.0, 16.0], [49.1, 16.0], [49.2, 16.0], [49.3, 16.0], [49.4, 16.0], [49.5, 16.0], [49.6, 16.0], [49.7, 16.0], [49.8, 16.0], [49.9, 16.0], [50.0, 16.0], [50.1, 16.0], [50.2, 16.0], [50.3, 16.0], [50.4, 16.0], [50.5, 16.0], [50.6, 16.0], [50.7, 16.0], [50.8, 16.0], [50.9, 16.0], [51.0, 16.0], [51.1, 16.0], [51.2, 16.0], [51.3, 16.0], [51.4, 16.0], [51.5, 16.0], [51.6, 16.0], [51.7, 16.0], [51.8, 16.0], [51.9, 16.0], [52.0, 16.0], [52.1, 16.0], [52.2, 16.0], [52.3, 16.0], [52.4, 16.0], [52.5, 16.0], [52.6, 16.0], [52.7, 16.0], [52.8, 16.0], [52.9, 16.0], [53.0, 16.0], [53.1, 16.0], [53.2, 16.0], [53.3, 16.0], [53.4, 16.0], [53.5, 16.0], [53.6, 16.0], [53.7, 16.0], [53.8, 16.0], [53.9, 16.0], [54.0, 16.0], [54.1, 16.0], [54.2, 16.0], [54.3, 16.0], [54.4, 16.0], [54.5, 16.0], [54.6, 16.0], [54.7, 16.0], [54.8, 16.0], [54.9, 16.0], [55.0, 16.0], [55.1, 16.0], [55.2, 16.0], [55.3, 16.0], [55.4, 16.0], [55.5, 16.0], [55.6, 16.0], [55.7, 16.0], [55.8, 16.0], [55.9, 16.0], [56.0, 16.0], [56.1, 16.0], [56.2, 16.0], [56.3, 16.0], [56.4, 16.0], [56.5, 16.0], [56.6, 16.0], [56.7, 16.0], [56.8, 16.0], [56.9, 16.0], [57.0, 16.0], [57.1, 16.0], [57.2, 16.0], [57.3, 16.0], [57.4, 16.0], [57.5, 16.0], [57.6, 16.0], [57.7, 16.0], [57.8, 16.0], [57.9, 16.0], [58.0, 16.0], [58.1, 16.0], [58.2, 16.0], [58.3, 16.0], [58.4, 16.0], [58.5, 16.0], [58.6, 16.0], [58.7, 16.0], [58.8, 16.0], [58.9, 16.0], [59.0, 16.0], [59.1, 16.0], [59.2, 16.0], [59.3, 16.0], [59.4, 16.0], [59.5, 16.0], [59.6, 16.0], [59.7, 16.0], [59.8, 16.0], [59.9, 16.0], [60.0, 16.0], [60.1, 16.0], [60.2, 17.0], [60.3, 17.0], [60.4, 17.0], [60.5, 17.0], [60.6, 17.0], [60.7, 17.0], [60.8, 17.0], [60.9, 17.0], [61.0, 17.0], [61.1, 17.0], [61.2, 17.0], [61.3, 17.0], [61.4, 17.0], [61.5, 17.0], [61.6, 17.0], [61.7, 17.0], [61.8, 17.0], [61.9, 17.0], [62.0, 17.0], [62.1, 17.0], [62.2, 17.0], [62.3, 17.0], [62.4, 17.0], [62.5, 17.0], [62.6, 17.0], [62.7, 17.0], [62.8, 17.0], [62.9, 17.0], [63.0, 17.0], [63.1, 17.0], [63.2, 17.0], [63.3, 17.0], [63.4, 17.0], [63.5, 17.0], [63.6, 17.0], [63.7, 17.0], [63.8, 17.0], [63.9, 17.0], [64.0, 17.0], [64.1, 17.0], [64.2, 17.0], [64.3, 17.0], [64.4, 17.0], [64.5, 17.0], [64.6, 17.0], [64.7, 17.0], [64.8, 17.0], [64.9, 17.0], [65.0, 17.0], [65.1, 17.0], [65.2, 17.0], [65.3, 17.0], [65.4, 17.0], [65.5, 17.0], [65.6, 17.0], [65.7, 17.0], [65.8, 17.0], [65.9, 17.0], [66.0, 17.0], [66.1, 17.0], [66.2, 17.0], [66.3, 17.0], [66.4, 17.0], [66.5, 17.0], [66.6, 17.0], [66.7, 17.0], [66.8, 17.0], [66.9, 17.0], [67.0, 17.0], [67.1, 17.0], [67.2, 17.0], [67.3, 17.0], [67.4, 17.0], [67.5, 17.0], [67.6, 17.0], [67.7, 17.0], [67.8, 17.0], [67.9, 17.0], [68.0, 17.0], [68.1, 17.0], [68.2, 17.0], [68.3, 17.0], [68.4, 17.0], [68.5, 17.0], [68.6, 17.0], [68.7, 17.0], [68.8, 18.0], [68.9, 18.0], [69.0, 18.0], [69.1, 18.0], [69.2, 18.0], [69.3, 18.0], [69.4, 18.0], [69.5, 18.0], [69.6, 18.0], [69.7, 18.0], [69.8, 18.0], [69.9, 18.0], [70.0, 18.0], [70.1, 18.0], [70.2, 18.0], [70.3, 18.0], [70.4, 18.0], [70.5, 18.0], [70.6, 18.0], [70.7, 18.0], [70.8, 18.0], [70.9, 18.0], [71.0, 18.0], [71.1, 18.0], [71.2, 18.0], [71.3, 18.0], [71.4, 18.0], [71.5, 18.0], [71.6, 18.0], [71.7, 18.0], [71.8, 18.0], [71.9, 18.0], [72.0, 18.0], [72.1, 18.0], [72.2, 18.0], [72.3, 18.0], [72.4, 18.0], [72.5, 18.0], [72.6, 18.0], [72.7, 18.0], [72.8, 18.0], [72.9, 18.0], [73.0, 18.0], [73.1, 18.0], [73.2, 18.0], [73.3, 18.0], [73.4, 18.0], [73.5, 18.0], [73.6, 18.0], [73.7, 18.0], [73.8, 19.0], [73.9, 19.0], [74.0, 19.0], [74.1, 19.0], [74.2, 19.0], [74.3, 19.0], [74.4, 19.0], [74.5, 19.0], [74.6, 19.0], [74.7, 19.0], [74.8, 19.0], [74.9, 19.0], [75.0, 19.0], [75.1, 19.0], [75.2, 19.0], [75.3, 19.0], [75.4, 19.0], [75.5, 19.0], [75.6, 19.0], [75.7, 19.0], [75.8, 19.0], [75.9, 19.0], [76.0, 19.0], [76.1, 19.0], [76.2, 19.0], [76.3, 19.0], [76.4, 19.0], [76.5, 19.0], [76.6, 19.0], [76.7, 19.0], [76.8, 19.0], [76.9, 19.0], [77.0, 19.0], [77.1, 19.0], [77.2, 20.0], [77.3, 20.0], [77.4, 20.0], [77.5, 20.0], [77.6, 20.0], [77.7, 20.0], [77.8, 20.0], [77.9, 20.0], [78.0, 20.0], [78.1, 20.0], [78.2, 20.0], [78.3, 20.0], [78.4, 20.0], [78.5, 20.0], [78.6, 20.0], [78.7, 20.0], [78.8, 20.0], [78.9, 20.0], [79.0, 20.0], [79.1, 20.0], [79.2, 20.0], [79.3, 20.0], [79.4, 20.0], [79.5, 20.0], [79.6, 20.0], [79.7, 20.0], [79.8, 20.0], [79.9, 21.0], [80.0, 21.0], [80.1, 21.0], [80.2, 21.0], [80.3, 21.0], [80.4, 21.0], [80.5, 21.0], [80.6, 21.0], [80.7, 21.0], [80.8, 21.0], [80.9, 21.0], [81.0, 21.0], [81.1, 21.0], [81.2, 21.0], [81.3, 21.0], [81.4, 21.0], [81.5, 21.0], [81.6, 21.0], [81.7, 21.0], [81.8, 21.0], [81.9, 21.0], [82.0, 21.0], [82.1, 21.0], [82.2, 21.0], [82.3, 21.0], [82.4, 22.0], [82.5, 22.0], [82.6, 22.0], [82.7, 22.0], [82.8, 22.0], [82.9, 22.0], [83.0, 22.0], [83.1, 22.0], [83.2, 22.0], [83.3, 22.0], [83.4, 22.0], [83.5, 22.0], [83.6, 22.0], [83.7, 22.0], [83.8, 22.0], [83.9, 22.0], [84.0, 22.0], [84.1, 22.0], [84.2, 22.0], [84.3, 22.0], [84.4, 22.0], [84.5, 23.0], [84.6, 23.0], [84.7, 23.0], [84.8, 23.0], [84.9, 23.0], [85.0, 23.0], [85.1, 23.0], [85.2, 23.0], [85.3, 23.0], [85.4, 23.0], [85.5, 23.0], [85.6, 23.0], [85.7, 23.0], [85.8, 23.0], [85.9, 23.0], [86.0, 23.0], [86.1, 24.0], [86.2, 24.0], [86.3, 24.0], [86.4, 24.0], [86.5, 24.0], [86.6, 24.0], [86.7, 24.0], [86.8, 24.0], [86.9, 24.0], [87.0, 24.0], [87.1, 24.0], [87.2, 25.0], [87.3, 25.0], [87.4, 25.0], [87.5, 25.0], [87.6, 25.0], [87.7, 25.0], [87.8, 25.0], [87.9, 25.0], [88.0, 25.0], [88.1, 25.0], [88.2, 26.0], [88.3, 26.0], [88.4, 26.0], [88.5, 26.0], [88.6, 26.0], [88.7, 26.0], [88.8, 26.0], [88.9, 26.0], [89.0, 26.0], [89.1, 27.0], [89.2, 27.0], [89.3, 27.0], [89.4, 27.0], [89.5, 27.0], [89.6, 27.0], [89.7, 27.0], [89.8, 27.0], [89.9, 27.0], [90.0, 28.0], [90.1, 28.0], [90.2, 28.0], [90.3, 28.0], [90.4, 28.0], [90.5, 28.0], [90.6, 28.0], [90.7, 28.0], [90.8, 28.0], [90.9, 29.0], [91.0, 29.0], [91.1, 29.0], [91.2, 29.0], [91.3, 29.0], [91.4, 29.0], [91.5, 29.0], [91.6, 30.0], [91.7, 30.0], [91.8, 30.0], [91.9, 30.0], [92.0, 30.0], [92.1, 30.0], [92.2, 30.0], [92.3, 30.0], [92.4, 31.0], [92.5, 31.0], [92.6, 31.0], [92.7, 31.0], [92.8, 31.0], [92.9, 31.0], [93.0, 32.0], [93.1, 32.0], [93.2, 32.0], [93.3, 32.0], [93.4, 32.0], [93.5, 32.0], [93.6, 32.0], [93.7, 33.0], [93.8, 33.0], [93.9, 33.0], [94.0, 33.0], [94.1, 33.0], [94.2, 33.0], [94.3, 33.0], [94.4, 34.0], [94.5, 34.0], [94.6, 34.0], [94.7, 34.0], [94.8, 34.0], [94.9, 34.0], [95.0, 34.0], [95.1, 35.0], [95.2, 35.0], [95.3, 35.0], [95.4, 35.0], [95.5, 35.0], [95.6, 35.0], [95.7, 35.0], [95.8, 36.0], [95.9, 36.0], [96.0, 36.0], [96.1, 36.0], [96.2, 36.0], [96.3, 36.0], [96.4, 36.0], [96.5, 37.0], [96.6, 37.0], [96.7, 37.0], [96.8, 37.0], [96.9, 37.0], [97.0, 37.0], [97.1, 37.0], [97.2, 37.0], [97.3, 38.0], [97.4, 38.0], [97.5, 38.0], [97.6, 38.0], [97.7, 38.0], [97.8, 39.0], [97.9, 39.0], [98.0, 39.0], [98.1, 39.0], [98.2, 39.0], [98.3, 40.0], [98.4, 40.0], [98.5, 40.0], [98.6, 41.0], [98.7, 41.0], [98.8, 41.0], [98.9, 41.0], [99.0, 42.0], [99.1, 42.0], [99.2, 43.0], [99.3, 44.0], [99.4, 45.0], [99.5, 45.0], [99.6, 48.0], [99.7, 49.0], [99.8, 51.0], [99.9, 63.0], [100.0, 287.0]], "isOverall": false, "label": "TracesQuery", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 3.0], [25.4, 3.0], [25.5, 3.0], [25.6, 3.0], [25.7, 3.0], [25.8, 3.0], [25.9, 3.0], [26.0, 3.0], [26.1, 3.0], [26.2, 3.0], [26.3, 3.0], [26.4, 3.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 3.0], [27.5, 3.0], [27.6, 3.0], [27.7, 3.0], [27.8, 3.0], [27.9, 3.0], [28.0, 3.0], [28.1, 3.0], [28.2, 3.0], [28.3, 3.0], [28.4, 3.0], [28.5, 3.0], [28.6, 3.0], [28.7, 3.0], [28.8, 3.0], [28.9, 3.0], [29.0, 3.0], [29.1, 3.0], [29.2, 3.0], [29.3, 3.0], [29.4, 3.0], [29.5, 3.0], [29.6, 3.0], [29.7, 3.0], [29.8, 3.0], [29.9, 3.0], [30.0, 3.0], [30.1, 3.0], [30.2, 3.0], [30.3, 3.0], [30.4, 3.0], [30.5, 3.0], [30.6, 3.0], [30.7, 3.0], [30.8, 3.0], [30.9, 3.0], [31.0, 3.0], [31.1, 3.0], [31.2, 3.0], [31.3, 3.0], [31.4, 3.0], [31.5, 3.0], [31.6, 3.0], [31.7, 3.0], [31.8, 3.0], [31.9, 3.0], [32.0, 3.0], [32.1, 3.0], [32.2, 3.0], [32.3, 3.0], [32.4, 3.0], [32.5, 3.0], [32.6, 3.0], [32.7, 3.0], [32.8, 3.0], [32.9, 3.0], [33.0, 3.0], [33.1, 3.0], [33.2, 3.0], [33.3, 3.0], [33.4, 3.0], [33.5, 3.0], [33.6, 3.0], [33.7, 3.0], [33.8, 3.0], [33.9, 3.0], [34.0, 3.0], [34.1, 3.0], [34.2, 3.0], [34.3, 3.0], [34.4, 3.0], [34.5, 3.0], [34.6, 3.0], [34.7, 3.0], [34.8, 3.0], [34.9, 3.0], [35.0, 3.0], [35.1, 3.0], [35.2, 3.0], [35.3, 3.0], [35.4, 3.0], [35.5, 3.0], [35.6, 3.0], [35.7, 3.0], [35.8, 3.0], [35.9, 3.0], [36.0, 3.0], [36.1, 3.0], [36.2, 3.0], [36.3, 3.0], [36.4, 3.0], [36.5, 3.0], [36.6, 3.0], [36.7, 3.0], [36.8, 3.0], [36.9, 3.0], [37.0, 3.0], [37.1, 3.0], [37.2, 3.0], [37.3, 3.0], [37.4, 3.0], [37.5, 3.0], [37.6, 3.0], [37.7, 3.0], [37.8, 3.0], [37.9, 3.0], [38.0, 3.0], [38.1, 3.0], [38.2, 3.0], [38.3, 3.0], [38.4, 3.0], [38.5, 3.0], [38.6, 3.0], [38.7, 3.0], [38.8, 3.0], [38.9, 3.0], [39.0, 3.0], [39.1, 3.0], [39.2, 3.0], [39.3, 3.0], [39.4, 3.0], [39.5, 3.0], [39.6, 3.0], [39.7, 3.0], [39.8, 3.0], [39.9, 3.0], [40.0, 3.0], [40.1, 3.0], [40.2, 3.0], [40.3, 3.0], [40.4, 3.0], [40.5, 3.0], [40.6, 3.0], [40.7, 3.0], [40.8, 3.0], [40.9, 3.0], [41.0, 3.0], [41.1, 3.0], [41.2, 3.0], [41.3, 3.0], [41.4, 3.0], [41.5, 3.0], [41.6, 3.0], [41.7, 3.0], [41.8, 3.0], [41.9, 3.0], [42.0, 3.0], [42.1, 3.0], [42.2, 3.0], [42.3, 3.0], [42.4, 3.0], [42.5, 3.0], [42.6, 3.0], [42.7, 3.0], [42.8, 3.0], [42.9, 3.0], [43.0, 3.0], [43.1, 3.0], [43.2, 3.0], [43.3, 3.0], [43.4, 3.0], [43.5, 3.0], [43.6, 3.0], [43.7, 3.0], [43.8, 3.0], [43.9, 3.0], [44.0, 3.0], [44.1, 3.0], [44.2, 3.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 3.0], [57.1, 3.0], [57.2, 3.0], [57.3, 3.0], [57.4, 3.0], [57.5, 3.0], [57.6, 3.0], [57.7, 3.0], [57.8, 3.0], [57.9, 3.0], [58.0, 3.0], [58.1, 3.0], [58.2, 3.0], [58.3, 3.0], [58.4, 3.0], [58.5, 3.0], [58.6, 3.0], [58.7, 3.0], [58.8, 3.0], [58.9, 3.0], [59.0, 3.0], [59.1, 3.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 3.0], [60.0, 3.0], [60.1, 3.0], [60.2, 3.0], [60.3, 3.0], [60.4, 3.0], [60.5, 3.0], [60.6, 3.0], [60.7, 3.0], [60.8, 3.0], [60.9, 3.0], [61.0, 3.0], [61.1, 3.0], [61.2, 3.0], [61.3, 3.0], [61.4, 3.0], [61.5, 3.0], [61.6, 3.0], [61.7, 3.0], [61.8, 3.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 4.0], [64.4, 4.0], [64.5, 4.0], [64.6, 4.0], [64.7, 4.0], [64.8, 4.0], [64.9, 4.0], [65.0, 4.0], [65.1, 4.0], [65.2, 4.0], [65.3, 4.0], [65.4, 4.0], [65.5, 4.0], [65.6, 4.0], [65.7, 4.0], [65.8, 4.0], [65.9, 4.0], [66.0, 4.0], [66.1, 4.0], [66.2, 4.0], [66.3, 4.0], [66.4, 4.0], [66.5, 4.0], [66.6, 4.0], [66.7, 4.0], [66.8, 4.0], [66.9, 4.0], [67.0, 4.0], [67.1, 4.0], [67.2, 4.0], [67.3, 4.0], [67.4, 4.0], [67.5, 4.0], [67.6, 4.0], [67.7, 4.0], [67.8, 4.0], [67.9, 4.0], [68.0, 4.0], [68.1, 4.0], [68.2, 4.0], [68.3, 4.0], [68.4, 4.0], [68.5, 4.0], [68.6, 4.0], [68.7, 4.0], [68.8, 4.0], [68.9, 4.0], [69.0, 4.0], [69.1, 4.0], [69.2, 4.0], [69.3, 4.0], [69.4, 4.0], [69.5, 4.0], [69.6, 4.0], [69.7, 4.0], [69.8, 4.0], [69.9, 4.0], [70.0, 4.0], [70.1, 4.0], [70.2, 4.0], [70.3, 4.0], [70.4, 4.0], [70.5, 4.0], [70.6, 4.0], [70.7, 4.0], [70.8, 4.0], [70.9, 4.0], [71.0, 4.0], [71.1, 4.0], [71.2, 4.0], [71.3, 4.0], [71.4, 4.0], [71.5, 4.0], [71.6, 4.0], [71.7, 4.0], [71.8, 4.0], [71.9, 4.0], [72.0, 4.0], [72.1, 4.0], [72.2, 4.0], [72.3, 4.0], [72.4, 4.0], [72.5, 4.0], [72.6, 4.0], [72.7, 4.0], [72.8, 4.0], [72.9, 4.0], [73.0, 4.0], [73.1, 4.0], [73.2, 4.0], [73.3, 4.0], [73.4, 4.0], [73.5, 4.0], [73.6, 4.0], [73.7, 4.0], [73.8, 4.0], [73.9, 4.0], [74.0, 4.0], [74.1, 4.0], [74.2, 4.0], [74.3, 4.0], [74.4, 4.0], [74.5, 4.0], [74.6, 4.0], [74.7, 4.0], [74.8, 4.0], [74.9, 4.0], [75.0, 4.0], [75.1, 4.0], [75.2, 4.0], [75.3, 4.0], [75.4, 4.0], [75.5, 4.0], [75.6, 4.0], [75.7, 4.0], [75.8, 4.0], [75.9, 4.0], [76.0, 4.0], [76.1, 4.0], [76.2, 4.0], [76.3, 4.0], [76.4, 4.0], [76.5, 4.0], [76.6, 4.0], [76.7, 4.0], [76.8, 4.0], [76.9, 4.0], [77.0, 4.0], [77.1, 4.0], [77.2, 4.0], [77.3, 4.0], [77.4, 4.0], [77.5, 4.0], [77.6, 4.0], [77.7, 4.0], [77.8, 4.0], [77.9, 4.0], [78.0, 4.0], [78.1, 4.0], [78.2, 4.0], [78.3, 4.0], [78.4, 4.0], [78.5, 4.0], [78.6, 4.0], [78.7, 4.0], [78.8, 4.0], [78.9, 4.0], [79.0, 4.0], [79.1, 4.0], [79.2, 4.0], [79.3, 4.0], [79.4, 4.0], [79.5, 4.0], [79.6, 4.0], [79.7, 4.0], [79.8, 4.0], [79.9, 4.0], [80.0, 4.0], [80.1, 4.0], [80.2, 4.0], [80.3, 4.0], [80.4, 4.0], [80.5, 4.0], [80.6, 4.0], [80.7, 4.0], [80.8, 4.0], [80.9, 4.0], [81.0, 4.0], [81.1, 4.0], [81.2, 4.0], [81.3, 4.0], [81.4, 4.0], [81.5, 4.0], [81.6, 4.0], [81.7, 4.0], [81.8, 4.0], [81.9, 4.0], [82.0, 4.0], [82.1, 4.0], [82.2, 4.0], [82.3, 4.0], [82.4, 4.0], [82.5, 4.0], [82.6, 4.0], [82.7, 4.0], [82.8, 4.0], [82.9, 4.0], [83.0, 4.0], [83.1, 4.0], [83.2, 4.0], [83.3, 4.0], [83.4, 4.0], [83.5, 4.0], [83.6, 4.0], [83.7, 4.0], [83.8, 4.0], [83.9, 4.0], [84.0, 4.0], [84.1, 4.0], [84.2, 4.0], [84.3, 4.0], [84.4, 4.0], [84.5, 4.0], [84.6, 4.0], [84.7, 4.0], [84.8, 4.0], [84.9, 4.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 5.0], [85.4, 5.0], [85.5, 5.0], [85.6, 5.0], [85.7, 5.0], [85.8, 5.0], [85.9, 5.0], [86.0, 5.0], [86.1, 5.0], [86.2, 5.0], [86.3, 5.0], [86.4, 5.0], [86.5, 5.0], [86.6, 5.0], [86.7, 5.0], [86.8, 5.0], [86.9, 5.0], [87.0, 5.0], [87.1, 5.0], [87.2, 5.0], [87.3, 5.0], [87.4, 5.0], [87.5, 5.0], [87.6, 5.0], [87.7, 5.0], [87.8, 5.0], [87.9, 5.0], [88.0, 5.0], [88.1, 5.0], [88.2, 5.0], [88.3, 5.0], [88.4, 5.0], [88.5, 5.0], [88.6, 5.0], [88.7, 5.0], [88.8, 5.0], [88.9, 5.0], [89.0, 5.0], [89.1, 5.0], [89.2, 5.0], [89.3, 5.0], [89.4, 5.0], [89.5, 5.0], [89.6, 5.0], [89.7, 5.0], [89.8, 5.0], [89.9, 5.0], [90.0, 5.0], [90.1, 5.0], [90.2, 5.0], [90.3, 5.0], [90.4, 5.0], [90.5, 5.0], [90.6, 5.0], [90.7, 5.0], [90.8, 5.0], [90.9, 5.0], [91.0, 5.0], [91.1, 5.0], [91.2, 5.0], [91.3, 5.0], [91.4, 5.0], [91.5, 5.0], [91.6, 6.0], [91.7, 6.0], [91.8, 6.0], [91.9, 6.0], [92.0, 6.0], [92.1, 6.0], [92.2, 6.0], [92.3, 6.0], [92.4, 6.0], [92.5, 6.0], [92.6, 6.0], [92.7, 6.0], [92.8, 6.0], [92.9, 6.0], [93.0, 6.0], [93.1, 6.0], [93.2, 6.0], [93.3, 6.0], [93.4, 6.0], [93.5, 6.0], [93.6, 6.0], [93.7, 6.0], [93.8, 7.0], [93.9, 7.0], [94.0, 7.0], [94.1, 7.0], [94.2, 7.0], [94.3, 7.0], [94.4, 7.0], [94.5, 7.0], [94.6, 7.0], [94.7, 7.0], [94.8, 7.0], [94.9, 7.0], [95.0, 7.0], [95.1, 7.0], [95.2, 7.0], [95.3, 8.0], [95.4, 8.0], [95.5, 8.0], [95.6, 8.0], [95.7, 8.0], [95.8, 8.0], [95.9, 8.0], [96.0, 8.0], [96.1, 8.0], [96.2, 8.0], [96.3, 8.0], [96.4, 8.0], [96.5, 8.0], [96.6, 8.0], [96.7, 9.0], [96.8, 9.0], [96.9, 9.0], [97.0, 9.0], [97.1, 9.0], [97.2, 9.0], [97.3, 9.0], [97.4, 10.0], [97.5, 10.0], [97.6, 10.0], [97.7, 10.0], [97.8, 11.0], [97.9, 11.0], [98.0, 11.0], [98.1, 12.0], [98.2, 12.0], [98.3, 12.0], [98.4, 13.0], [98.5, 13.0], [98.6, 13.0], [98.7, 14.0], [98.8, 14.0], [98.9, 15.0], [99.0, 16.0], [99.1, 17.0], [99.2, 18.0], [99.3, 18.0], [99.4, 19.0], [99.5, 19.0], [99.6, 20.0], [99.7, 21.0], [99.8, 25.0], [99.9, 28.0]], "isOverall": false, "label": "RemoteServiceNames", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 15578.0, "series": [{"data": [[0.0, 15566.0], [100.0, 1.0]], "isOverall": false, "label": "SpanNames", "isController": false}, {"data": [[0.0, 11732.0], [600.0, 2081.0], [700.0, 169.0], [100.0, 8.0], [400.0, 14.0], [200.0, 10.0], [500.0, 1580.0]], "isOverall": false, "label": "ServiceNames", "isController": false}, {"data": [[0.0, 15551.0], [100.0, 9.0], [200.0, 1.0]], "isOverall": false, "label": "TracesQuery", "isController": false}, {"data": [[0.0, 15578.0], [100.0, 1.0]], "isOverall": false, "label": "RemoteServiceNames", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 43.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 58457.0, "series": [{"data": [[0.0, 58457.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 43.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 3801.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.739130434782609, "minX": 1.69865202E12, "maxY": 5.0, "series": [{"data": [[1.69865766E12, 4.992967651195499], [1.6986528E12, 4.9455370650529495], [1.6986522E12, 5.0], [1.69865514E12, 5.0], [1.69865322E12, 4.991416309012875], [1.69865544E12, 5.0], [1.69865292E12, 4.912031438935908], [1.69865736E12, 4.876675603217159], [1.69865706E12, 5.0], [1.69865556E12, 4.981699346405229], [1.69865232E12, 5.0], [1.69865202E12, 4.970588235294117], [1.69865748E12, 5.0], [1.69865718E12, 5.0], [1.69865526E12, 4.968099861303745], [1.69865304E12, 5.0], [1.69865496E12, 4.961828463713478], [1.69865244E12, 4.739130434782609], [1.69865214E12, 4.941860465116275], [1.698657E12, 5.0], [1.69865316E12, 5.0], [1.69865538E12, 5.0], [1.6986576E12, 5.0], [1.69865286E12, 5.0], [1.69865508E12, 4.959601549529602], [1.6986555E12, 5.0], [1.69865226E12, 5.0], [1.69865742E12, 5.0], [1.69865298E12, 5.0], [1.6986552E12, 5.0], [1.69865712E12, 5.0], [1.69865238E12, 5.0], [1.69865208E12, 5.0], [1.69865724E12, 4.9275362318840585], [1.69865694E12, 4.974622356495469], [1.69865754E12, 5.0], [1.69865502E12, 5.0], [1.6986531E12, 5.0], [1.69865532E12, 5.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69865766E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3.6644481778237368, "minX": 1.0, "maxY": 156.06512469311215, "series": [{"data": [[4.0, 4.8378378378378395], [2.0, 4.0], [1.0, 4.0], [5.0, 3.7098358536900413], [3.0, 5.13793103448276]], "isOverall": false, "label": "SpanNames", "isController": false}, {"data": [[4.988629793794551, 3.7156806064109995]], "isOverall": false, "label": "SpanNames-Aggregated", "isController": false}, {"data": [[2.0, 40.482758620689665], [4.0, 22.230769230769237], [1.0, 102.1], [5.0, 156.06512469311215], [3.0, 24.68421052631579]], "isOverall": false, "label": "ServiceNames", "isController": false}, {"data": [[4.984481210722074, 155.16070283442394]], "isOverall": false, "label": "ServiceNames-Aggregated", "isController": false}, {"data": [[2.0, 21.0], [4.0, 23.437499999999993], [1.0, 15.5], [5.0, 18.403075730162758], [3.0, 21.580645161290324]], "isOverall": false, "label": "TracesQuery", "isController": false}, {"data": [[4.989589358010451, 18.422723475355003]], "isOverall": false, "label": "TracesQuery-Aggregated", "isController": false}, {"data": [[2.0, 4.461538461538463], [4.0, 4.805555555555556], [1.0, 5.0], [5.0, 3.6644481778237368], [3.0, 4.108108108108108]], "isOverall": false, "label": "RemoteServiceNames", "isController": false}, {"data": [[4.98690544964377, 3.669811926311059]], "isOverall": false, "label": "RemoteServiceNames-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 108.83333333333333, "minX": 1.69865202E12, "maxY": 13356.283333333333, "series": [{"data": [[1.69865766E12, 3365.45], [1.6986528E12, 1565.0], [1.6986522E12, 710.0], [1.69865514E12, 6658.433333333333], [1.69865322E12, 5806.5], [1.69865544E12, 4231.6], [1.69865292E12, 10308.933333333332], [1.69865736E12, 883.4833333333333], [1.69865706E12, 4253.183333333333], [1.69865556E12, 1810.35], [1.69865232E12, 710.0], [1.69865202E12, 1449.1833333333334], [1.69865748E12, 4654.5], [1.69865718E12, 4252.916666666667], [1.69865526E12, 3981.8], [1.69865304E12, 13332.916666666666], [1.69865496E12, 12327.8], [1.69865244E12, 108.83333333333333], [1.69865214E12, 611.25], [1.698657E12, 4631.266666666666], [1.69865316E12, 13265.4], [1.69865538E12, 4662.533333333334], [1.6986576E12, 4636.65], [1.69865286E12, 2840.0], [1.69865508E12, 4277.333333333333], [1.6986555E12, 4660.15], [1.69865226E12, 710.0], [1.69865742E12, 4255.4], [1.69865298E12, 13187.066666666668], [1.6986552E12, 6848.583333333333], [1.69865712E12, 4667.066666666667], [1.69865238E12, 710.0], [1.69865208E12, 2660.133333333333], [1.69865724E12, 326.2], [1.69865694E12, 3917.766666666667], [1.69865754E12, 4253.1], [1.69865502E12, 7591.166666666667], [1.6986531E12, 13356.283333333333], [1.69865532E12, 4250.966666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69865766E12, 3827.7166666666667], [1.6986528E12, 1780.5333333333333], [1.6986522E12, 808.75], [1.69865514E12, 4936.233333333334], [1.69865322E12, 3138.3333333333335], [1.69865544E12, 4812.7], [1.69865292E12, 8917.816666666668], [1.69865736E12, 1001.8166666666667], [1.69865706E12, 4836.616666666667], [1.69865556E12, 2059.75], [1.69865232E12, 808.75], [1.69865202E12, 1647.8], [1.69865748E12, 4083.1], [1.69865718E12, 4836.916666666667], [1.69865526E12, 3881.5333333333333], [1.69865304E12, 10089.866666666667], [1.69865496E12, 11441.116666666667], [1.69865244E12, 124.98333333333333], [1.69865214E12, 693.15], [1.698657E12, 4080.866666666667], [1.69865316E12, 10060.85], [1.69865538E12, 4080.5666666666666], [1.6986576E12, 4075.95], [1.69865286E12, 3235.0], [1.69865508E12, 4869.333333333333], [1.6986555E12, 4077.883333333333], [1.69865226E12, 808.75], [1.69865742E12, 4839.933333333333], [1.69865298E12, 10006.933333333332], [1.6986552E12, 6553.233333333334], [1.69865712E12, 4086.6], [1.69865238E12, 808.75], [1.69865208E12, 3030.116666666667], [1.69865724E12, 372.3666666666667], [1.69865694E12, 4452.066666666667], [1.69865754E12, 4836.466666666666], [1.69865502E12, 4877.583333333333], [1.6986531E12, 10118.1], [1.69865532E12, 4833.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69865766E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2.5657015590200434, "minX": 1.69865202E12, "maxY": 610.820338983051, "series": [{"data": [[1.69865766E12, 2.6788732394366206], [1.6986528E12, 4.475609756097559], [1.6986522E12, 3.6399999999999992], [1.69865514E12, 3.2560175054704605], [1.69865322E12, 3.2413793103448287], [1.69865544E12, 2.897091722595078], [1.69865292E12, 5.266021765417171], [1.69865736E12, 3.2150537634408596], [1.69865706E12, 2.738839285714287], [1.69865556E12, 3.26178010471204], [1.69865232E12, 3.7200000000000006], [1.69865202E12, 6.105263157894739], [1.69865748E12, 2.7973684210526337], [1.69865718E12, 2.641425389755011], [1.69865526E12, 3.205555555555557], [1.69865304E12, 4.929487179487176], [1.69865496E12, 3.229971724787937], [1.69865244E12, 3.4000000000000004], [1.69865214E12, 4.015384615384616], [1.698657E12, 3.2447368421052607], [1.69865316E12, 4.5969989281886345], [1.69865538E12, 3.058047493403696], [1.6986576E12, 2.8815789473684195], [1.69865286E12, 3.966666666666666], [1.69865508E12, 3.463414634146341], [1.6986555E12, 3.187335092348285], [1.69865226E12, 3.4266666666666667], [1.69865742E12, 2.8459821428571455], [1.69865298E12, 5.03556034482759], [1.6986552E12, 3.3596059113300467], [1.69865712E12, 2.8921052631578945], [1.69865238E12, 3.400000000000001], [1.69865208E12, 3.875444839857651], [1.69865724E12, 2.7714285714285714], [1.69865694E12, 3.85956416464891], [1.69865754E12, 2.5657015590200434], [1.69865502E12, 3.226164079822618], [1.6986531E12, 5.014925373134329], [1.69865532E12, 2.854910714285715]], "isOverall": false, "label": "SpanNames", "isController": false}, {"data": [[1.69865766E12, 4.688202247191011], [1.6986528E12, 6.071856287425147], [1.6986522E12, 5.560000000000001], [1.69865514E12, 307.532751091703], [1.69865322E12, 610.820338983051], [1.69865544E12, 8.977628635346763], [1.69865292E12, 186.00725513905695], [1.69865736E12, 5.747368421052632], [1.69865706E12, 4.637777777777776], [1.69865556E12, 5.319371727748691], [1.69865232E12, 5.3599999999999985], [1.69865202E12, 11.935483870967735], [1.69865748E12, 172.36147757255924], [1.69865718E12, 4.962138084632521], [1.69865526E12, 100.70441988950276], [1.69865304E12, 286.9807692307697], [1.69865496E12, 133.240339302545], [1.69865244E12, 5.5], [1.69865214E12, 7.136363636363639], [1.698657E12, 172.85978835978847], [1.69865316E12, 287.7984994640943], [1.69865538E12, 173.64116094986824], [1.6986576E12, 174.2970822281168], [1.69865286E12, 5.333333333333333], [1.69865508E12, 5.407488986784137], [1.6986555E12, 174.77572559366757], [1.69865226E12, 5.3599999999999985], [1.69865742E12, 4.859999999999998], [1.69865298E12, 287.6131465517238], [1.6986552E12, 116.32948929159805], [1.69865712E12, 171.54999999999998], [1.69865238E12, 5.266666666666669], [1.69865208E12, 6.754448398576509], [1.69865724E12, 4.848484848484849], [1.69865694E12, 6.0216346153846185], [1.69865754E12, 4.2622222222222215], [1.69865502E12, 439.77582417582363], [1.6986531E12, 284.63113006396617], [1.69865532E12, 4.977777777777782]], "isOverall": false, "label": "ServiceNames", "isController": false}, {"data": [[1.69865766E12, 15.410112359550565], [1.6986528E12, 17.390243902439032], [1.6986522E12, 17.86666666666667], [1.69865514E12, 16.098253275109162], [1.69865322E12, 14.2896551724138], [1.69865544E12, 16.22818791946308], [1.69865292E12, 24.92503022974605], [1.69865736E12, 15.846153846153843], [1.69865706E12, 14.81291759465479], [1.69865556E12, 15.984374999999993], [1.69865232E12, 17.373333333333335], [1.69865202E12, 23.284768211920532], [1.69865748E12, 15.751978891820574], [1.69865718E12, 15.247216035634745], [1.69865526E12, 15.508379888268152], [1.69865304E12, 22.951871657754015], [1.69865496E12, 18.84542884071631], [1.69865244E12, 18.153846153846153], [1.69865214E12, 17.838709677419352], [1.698657E12, 16.928759894459112], [1.69865316E12, 22.377277599142523], [1.69865538E12, 16.427440633245368], [1.6986576E12, 15.20844327176781], [1.69865286E12, 16.41333333333334], [1.69865508E12, 15.79333333333334], [1.6986555E12, 16.290237467018486], [1.69865226E12, 17.253333333333327], [1.69865742E12, 16.06888888888892], [1.69865298E12, 23.998922413793114], [1.6986552E12, 15.93904448105434], [1.69865712E12, 15.304461942257227], [1.69865238E12, 17.85333333333333], [1.69865208E12, 17.925266903914597], [1.69865724E12, 17.857142857142865], [1.69865694E12, 18.17274939172748], [1.69865754E12, 14.674832962138083], [1.69865502E12, 16.90687361419069], [1.6986531E12, 22.50692225772099], [1.69865532E12, 15.310267857142843]], "isOverall": false, "label": "TracesQuery", "isController": false}, {"data": [[1.69865766E12, 2.738028169014087], [1.6986528E12, 4.921686746987954], [1.6986522E12, 3.933333333333333], [1.69865514E12, 3.572052401746725], [1.69865322E12, 3.76206896551724], [1.69865544E12, 3.004474272930649], [1.69865292E12, 4.900846432889964], [1.69865736E12, 3.9680851063829787], [1.69865706E12, 2.711111111111112], [1.69865556E12, 3.031413612565445], [1.69865232E12, 3.5866666666666664], [1.69865202E12, 6.396103896103894], [1.69865748E12, 3.2005277044854887], [1.69865718E12, 2.62], [1.69865526E12, 3.3453038674033135], [1.69865304E12, 4.539529914529921], [1.69865496E12, 3.1828463713477864], [1.69865244E12, 3.4545454545454546], [1.69865214E12, 3.815384615384616], [1.698657E12, 3.538258575197889], [1.69865316E12, 4.4523043944265766], [1.69865538E12, 3.0844327176781], [1.6986576E12, 2.91798941798942], [1.69865286E12, 4.256666666666658], [1.69865508E12, 3.4070796460176993], [1.6986555E12, 3.2169312169312176], [1.69865226E12, 3.520000000000001], [1.69865742E12, 3.7777777777777746], [1.69865298E12, 4.6088362068965525], [1.6986552E12, 3.271381578947366], [1.69865712E12, 2.9602122015915096], [1.69865238E12, 3.373333333333335], [1.69865208E12, 4.145907473309607], [1.69865724E12, 3.4857142857142867], [1.69865694E12, 3.7132530120481912], [1.69865754E12, 2.601336302895321], [1.69865502E12, 3.4415011037527616], [1.6986531E12, 4.017057569296377], [1.69865532E12, 2.893333333333331]], "isOverall": false, "label": "RemoteServiceNames", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69865766E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2.5523385300668133, "minX": 1.69865202E12, "maxY": 610.820338983051, "series": [{"data": [[1.69865766E12, 2.676056338028169], [1.6986528E12, 4.432926829268296], [1.6986522E12, 3.626666666666667], [1.69865514E12, 3.2516411378555805], [1.69865322E12, 3.23793103448276], [1.69865544E12, 2.8926174496644323], [1.69865292E12, 5.250302297460695], [1.69865736E12, 3.161290322580645], [1.69865706E12, 2.7321428571428568], [1.69865556E12, 3.26178010471204], [1.69865232E12, 3.7066666666666674], [1.69865202E12, 6.059210526315788], [1.69865748E12, 2.7921052631578958], [1.69865718E12, 2.6347438752783985], [1.69865526E12, 3.1916666666666673], [1.69865304E12, 4.924145299145295], [1.69865496E12, 3.2205466540999077], [1.69865244E12, 3.4000000000000004], [1.69865214E12, 3.9384615384615387], [1.698657E12, 3.2342105263157905], [1.69865316E12, 4.5905680600214405], [1.69865538E12, 3.03693931398417], [1.6986576E12, 2.873684210526316], [1.69865286E12, 3.9466666666666668], [1.69865508E12, 3.4345898004434567], [1.6986555E12, 3.187335092348285], [1.69865226E12, 3.4], [1.69865742E12, 2.828124999999999], [1.69865298E12, 5.030172413793096], [1.6986552E12, 3.353037766830871], [1.69865712E12, 2.8789473684210543], [1.69865238E12, 3.400000000000001], [1.69865208E12, 3.846975088967972], [1.69865724E12, 2.7714285714285714], [1.69865694E12, 3.8450363196125896], [1.69865754E12, 2.5523385300668133], [1.69865502E12, 3.2195121951219514], [1.6986531E12, 5.011727078891261], [1.69865532E12, 2.83482142857143]], "isOverall": false, "label": "SpanNames", "isController": false}, {"data": [[1.69865766E12, 4.682584269662922], [1.6986528E12, 5.994011976047907], [1.6986522E12, 5.560000000000001], [1.69865514E12, 307.5174672489081], [1.69865322E12, 610.820338983051], [1.69865544E12, 8.973154362416112], [1.69865292E12, 185.96856106408728], [1.69865736E12, 5.63157894736842], [1.69865706E12, 4.626666666666671], [1.69865556E12, 5.314136125654447], [1.69865232E12, 5.346666666666666], [1.69865202E12, 11.851612903225794], [1.69865748E12, 172.3509234828496], [1.69865718E12, 4.962138084632521], [1.69865526E12, 100.66850828729288], [1.69865304E12, 286.97435897435986], [1.69865496E12, 133.2205466540999], [1.69865244E12, 5.416666666666666], [1.69865214E12, 7.015151515151517], [1.698657E12, 172.84391534391537], [1.69865316E12, 287.7931404072885], [1.69865538E12, 173.62796833773092], [1.6986576E12, 174.29442970822268], [1.69865286E12, 5.306666666666666], [1.69865508E12, 5.354625550660791], [1.6986555E12, 174.7651715039578], [1.69865226E12, 5.3599999999999985], [1.69865742E12, 4.84], [1.69865298E12, 287.6012931034488], [1.6986552E12, 116.32454695222408], [1.69865712E12, 171.53684210526316], [1.69865238E12, 5.266666666666669], [1.69865208E12, 6.750889679715299], [1.69865724E12, 4.848484848484849], [1.69865694E12, 5.9831730769230775], [1.69865754E12, 4.246666666666669], [1.69865502E12, 439.76703296703334], [1.6986531E12, 284.6247334754797], [1.69865532E12, 4.973333333333332]], "isOverall": false, "label": "ServiceNames", "isController": false}, {"data": [[1.69865766E12, 15.407303370786522], [1.6986528E12, 17.32926829268293], [1.6986522E12, 17.853333333333346], [1.69865514E12, 16.089519650655028], [1.69865322E12, 14.2896551724138], [1.69865544E12, 16.212527964205822], [1.69865292E12, 24.892382103990325], [1.69865736E12, 15.824175824175823], [1.69865706E12, 14.797327394209358], [1.69865556E12, 15.979166666666666], [1.69865232E12, 17.346666666666668], [1.69865202E12, 23.25827814569536], [1.69865748E12, 15.741424802110824], [1.69865718E12, 15.242761692650335], [1.69865526E12, 15.488826815642447], [1.69865304E12, 22.94759358288769], [1.69865496E12, 18.832233741753058], [1.69865244E12, 18.076923076923077], [1.69865214E12, 17.80645161290323], [1.698657E12, 16.9208443271768], [1.69865316E12, 22.374062165058938], [1.69865538E12, 16.414248021108172], [1.6986576E12, 15.19261213720316], [1.69865286E12, 16.383333333333336], [1.69865508E12, 15.771111111111127], [1.6986555E12, 16.28759894459104], [1.69865226E12, 17.24], [1.69865742E12, 16.051111111111126], [1.69865298E12, 23.994612068965537], [1.6986552E12, 15.925864909390459], [1.69865712E12, 15.304461942257227], [1.69865238E12, 17.826666666666675], [1.69865208E12, 17.900355871886102], [1.69865724E12, 17.857142857142865], [1.69865694E12, 18.145985401459868], [1.69865754E12, 14.659242761692639], [1.69865502E12, 16.893569844789358], [1.6986531E12, 22.50372736954207], [1.69865532E12, 15.290178571428573]], "isOverall": false, "label": "TracesQuery", "isController": false}, {"data": [[1.69865766E12, 2.7323943661971817], [1.6986528E12, 4.879518072289156], [1.6986522E12, 3.9066666666666667], [1.69865514E12, 3.5567685589519633], [1.69865322E12, 3.7586206896551726], [1.69865544E12, 2.9999999999999987], [1.69865292E12, 4.896009673518739], [1.69865736E12, 3.9255319148936167], [1.69865706E12, 2.6999999999999984], [1.69865556E12, 3.0261780104712046], [1.69865232E12, 3.5599999999999996], [1.69865202E12, 6.331168831168835], [1.69865748E12, 3.189973614775725], [1.69865718E12, 2.62], [1.69865526E12, 3.3204419889502788], [1.69865304E12, 4.537393162393171], [1.69865496E12, 3.1724787935909515], [1.69865244E12, 3.4545454545454546], [1.69865214E12, 3.769230769230769], [1.698657E12, 3.5303430079155667], [1.69865316E12, 4.450160771704184], [1.69865538E12, 3.065963060686017], [1.6986576E12, 2.912698412698412], [1.69865286E12, 4.246666666666668], [1.69865508E12, 3.3849557522123903], [1.6986555E12, 3.2142857142857135], [1.69865226E12, 3.5066666666666677], [1.69865742E12, 3.760000000000002], [1.69865298E12, 4.60129310344828], [1.6986552E12, 3.2631578947368416], [1.69865712E12, 2.949602122015915], [1.69865238E12, 3.3600000000000003], [1.69865208E12, 4.135231316725981], [1.69865724E12, 3.4857142857142867], [1.69865694E12, 3.6891566265060227], [1.69865754E12, 2.5902004454342986], [1.69865502E12, 3.434878587196469], [1.6986531E12, 4.010660980810232], [1.69865532E12, 2.8866666666666676]], "isOverall": false, "label": "RemoteServiceNames", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69865766E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69865202E12, "maxY": 0.5606060606060608, "series": [{"data": [[1.69865766E12, 0.0], [1.6986528E12, 0.0], [1.6986522E12, 0.0], [1.69865514E12, 0.0], [1.69865322E12, 0.0], [1.69865544E12, 0.002237136465324385], [1.69865292E12, 0.0], [1.69865736E12, 0.0], [1.69865706E12, 0.002232142857142857], [1.69865556E12, 0.0], [1.69865232E12, 0.02666666666666667], [1.69865202E12, 0.0], [1.69865748E12, 0.0], [1.69865718E12, 0.0022271714922048997], [1.69865526E12, 0.0], [1.69865304E12, 0.0010683760683760707], [1.69865496E12, 0.0], [1.69865244E12, 0.0], [1.69865214E12, 0.0], [1.698657E12, 0.0], [1.69865316E12, 0.0], [1.69865538E12, 0.0026385224274406305], [1.6986576E12, 0.0], [1.69865286E12, 0.003333333333333332], [1.69865508E12, 0.0], [1.6986555E12, 0.0026385224274406305], [1.69865226E12, 0.0], [1.69865742E12, 0.0], [1.69865298E12, 0.0], [1.6986552E12, 0.004926108374384234], [1.69865712E12, 0.0026315789473684193], [1.69865238E12, 0.013333333333333334], [1.69865208E12, 0.0], [1.69865724E12, 0.0], [1.69865694E12, 0.0], [1.69865754E12, 0.0], [1.69865502E12, 0.0022172949002217295], [1.6986531E12, 0.0], [1.69865532E12, 0.002232142857142857]], "isOverall": false, "label": "SpanNames", "isController": false}, {"data": [[1.69865766E12, 0.0], [1.6986528E12, 0.17964071856287434], [1.6986522E12, 0.0], [1.69865514E12, 0.004366812227074234], [1.69865322E12, 0.0], [1.69865544E12, 0.002237136465324385], [1.69865292E12, 0.10036275695284158], [1.69865736E12, 0.2842105263157894], [1.69865706E12, 0.0044444444444444444], [1.69865556E12, 0.0], [1.69865232E12, 0.0], [1.69865202E12, 0.21290322580645174], [1.69865748E12, 0.0], [1.69865718E12, 0.0], [1.69865526E12, 0.08287292817679558], [1.69865304E12, 0.0], [1.69865496E12, 0.03675777568331772], [1.69865244E12, 0.0], [1.69865214E12, 0.5606060606060608], [1.698657E12, 0.005291005291005287], [1.69865316E12, 0.0], [1.69865538E12, 0.0026385224274406305], [1.6986576E12, 0.002652519893899203], [1.69865286E12, 0.003333333333333332], [1.69865508E12, 0.06387665198237873], [1.6986555E12, 0.0], [1.69865226E12, 0.0], [1.69865742E12, 0.004444444444444447], [1.69865298E12, 0.0], [1.6986552E12, 0.0], [1.69865712E12, 0.0026315789473684193], [1.69865238E12, 0.0], [1.69865208E12, 0.0], [1.69865724E12, 0.0], [1.69865694E12, 0.0961538461538461], [1.69865754E12, 0.0022222222222222235], [1.69865502E12, 0.0], [1.6986531E12, 0.0], [1.69865532E12, 0.004444444444444445]], "isOverall": false, "label": "ServiceNames", "isController": false}, {"data": [[1.69865766E12, 0.0], [1.6986528E12, 0.0], [1.6986522E12, 0.0], [1.69865514E12, 0.0], [1.69865322E12, 0.0], [1.69865544E12, 0.002237136465324385], [1.69865292E12, 0.0], [1.69865736E12, 0.0], [1.69865706E12, 0.0022271714922048997], [1.69865556E12, 0.0], [1.69865232E12, 0.0], [1.69865202E12, 0.0], [1.69865748E12, 0.005277044854881265], [1.69865718E12, 0.0022271714922048997], [1.69865526E12, 0.0], [1.69865304E12, 0.0], [1.69865496E12, 0.0], [1.69865244E12, 0.0], [1.69865214E12, 0.0], [1.698657E12, 0.007915567282321907], [1.69865316E12, 0.0], [1.69865538E12, 0.0], [1.6986576E12, 0.005277044854881265], [1.69865286E12, 0.003333333333333332], [1.69865508E12, 0.0], [1.6986555E12, 0.0], [1.69865226E12, 0.0], [1.69865742E12, 0.0022222222222222235], [1.69865298E12, 0.0], [1.6986552E12, 0.0], [1.69865712E12, 0.002624671916010497], [1.69865238E12, 0.013333333333333334], [1.69865208E12, 0.0], [1.69865724E12, 0.0], [1.69865694E12, 0.0], [1.69865754E12, 0.0], [1.69865502E12, 0.0], [1.6986531E12, 0.0], [1.69865532E12, 0.0]], "isOverall": false, "label": "TracesQuery", "isController": false}, {"data": [[1.69865766E12, 0.0], [1.6986528E12, 0.0], [1.6986522E12, 0.02666666666666667], [1.69865514E12, 0.004366812227074236], [1.69865322E12, 0.0], [1.69865544E12, 0.0022371364653243847], [1.69865292E12, 0.0], [1.69865736E12, 0.0], [1.69865706E12, 0.0], [1.69865556E12, 0.0], [1.69865232E12, 0.013333333333333334], [1.69865202E12, 0.0], [1.69865748E12, 0.005277044854881265], [1.69865718E12, 0.0], [1.69865526E12, 0.0], [1.69865304E12, 0.004273504273504284], [1.69865496E12, 0.0], [1.69865244E12, 0.0], [1.69865214E12, 0.0], [1.698657E12, 0.0026385224274406314], [1.69865316E12, 0.0021436227224008626], [1.69865538E12, 0.005277044854881261], [1.6986576E12, 0.0], [1.69865286E12, 0.0], [1.69865508E12, 0.0], [1.6986555E12, 0.0026455026455026428], [1.69865226E12, 0.02666666666666667], [1.69865742E12, 0.0], [1.69865298E12, 0.005387931034482758], [1.6986552E12, 0.0], [1.69865712E12, 0.0], [1.69865238E12, 0.0], [1.69865208E12, 0.014234875444839852], [1.69865724E12, 0.0], [1.69865694E12, 0.0], [1.69865754E12, 0.004454342984409802], [1.69865502E12, 0.008830022075055188], [1.6986531E12, 0.0010660980810234567], [1.69865532E12, 0.0022222222222222227]], "isOverall": false, "label": "RemoteServiceNames", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69865766E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.69865202E12, "maxY": 732.0, "series": [{"data": [[1.69865766E12, 21.0], [1.6986528E12, 50.0], [1.6986522E12, 23.0], [1.69865514E12, 697.0], [1.69865322E12, 22.0], [1.69865544E12, 611.0], [1.69865292E12, 732.0], [1.69865736E12, 54.0], [1.69865706E12, 32.0], [1.69865556E12, 52.0], [1.69865232E12, 21.0], [1.69865202E12, 192.0], [1.69865748E12, 687.0], [1.69865718E12, 190.0], [1.69865526E12, 653.0], [1.69865304E12, 676.0], [1.69865496E12, 664.0], [1.69865244E12, 23.0], [1.69865214E12, 59.0], [1.698657E12, 661.0], [1.69865316E12, 665.0], [1.69865538E12, 613.0], [1.6986576E12, 675.0], [1.69865286E12, 21.0], [1.69865508E12, 131.0], [1.6986555E12, 644.0], [1.69865226E12, 22.0], [1.69865742E12, 164.0], [1.69865298E12, 663.0], [1.6986552E12, 701.0], [1.69865712E12, 516.0], [1.69865238E12, 25.0], [1.69865208E12, 32.0], [1.69865724E12, 81.0], [1.69865694E12, 287.0], [1.69865754E12, 32.0], [1.69865502E12, 658.0], [1.6986531E12, 663.0], [1.69865532E12, 28.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69865766E12, 15.0], [1.6986528E12, 18.0], [1.6986522E12, 18.0], [1.69865514E12, 16.0], [1.69865322E12, 15.0], [1.69865544E12, 16.0], [1.69865292E12, 28.0], [1.69865736E12, 16.0], [1.69865706E12, 15.0], [1.69865556E12, 16.0], [1.69865232E12, 18.0], [1.69865202E12, 22.0], [1.69865748E12, 16.0], [1.69865718E12, 15.0], [1.69865526E12, 16.0], [1.69865304E12, 26.0], [1.69865496E12, 21.0], [1.69865244E12, 18.0], [1.69865214E12, 18.0], [1.698657E12, 17.0], [1.69865316E12, 27.0], [1.69865538E12, 16.0], [1.6986576E12, 15.0], [1.69865286E12, 17.0], [1.69865508E12, 15.0], [1.6986555E12, 16.0], [1.69865226E12, 18.0], [1.69865742E12, 16.0], [1.69865298E12, 27.0], [1.6986552E12, 16.0], [1.69865712E12, 15.0], [1.69865238E12, 18.0], [1.69865208E12, 18.0], [1.69865724E12, 16.0], [1.69865694E12, 18.0], [1.69865754E12, 15.0], [1.69865502E12, 17.0], [1.6986531E12, 26.0], [1.69865532E12, 16.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69865766E12, 18.0], [1.6986528E12, 20.0], [1.6986522E12, 20.99000000000001], [1.69865514E12, 22.0], [1.69865322E12, 19.0], [1.69865544E12, 22.0], [1.69865292E12, 45.0], [1.69865736E12, 18.0], [1.69865706E12, 16.0], [1.69865556E12, 21.0], [1.69865232E12, 20.0], [1.69865202E12, 37.74000000000001], [1.69865748E12, 20.84999999999991], [1.69865718E12, 21.0], [1.69865526E12, 19.11999999999989], [1.69865304E12, 41.0], [1.69865496E12, 27.0], [1.69865244E12, 23.0], [1.69865214E12, 20.82000000000005], [1.698657E12, 22.839999999999918], [1.69865316E12, 40.0], [1.69865538E12, 22.0], [1.6986576E12, 18.0], [1.69865286E12, 19.0], [1.69865508E12, 19.0], [1.6986555E12, 22.0], [1.69865226E12, 19.99000000000001], [1.69865742E12, 18.0], [1.69865298E12, 46.13000000000011], [1.6986552E12, 21.0], [1.69865712E12, 20.0], [1.69865238E12, 21.99000000000001], [1.69865208E12, 20.75], [1.69865724E12, 59.54999999999919], [1.69865694E12, 21.440000000000055], [1.69865754E12, 16.0], [1.69865502E12, 27.0], [1.6986531E12, 40.0], [1.69865532E12, 17.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69865766E12, 16.0], [1.6986528E12, 19.0], [1.6986522E12, 19.0], [1.69865514E12, 17.0], [1.69865322E12, 15.0], [1.69865544E12, 19.549999999999955], [1.69865292E12, 36.0], [1.69865736E12, 17.0], [1.69865706E12, 16.0], [1.69865556E12, 16.0], [1.69865232E12, 18.0], [1.69865202E12, 25.0], [1.69865748E12, 16.25], [1.69865718E12, 16.0], [1.69865526E12, 16.0], [1.69865304E12, 33.0], [1.69865496E12, 23.0], [1.69865244E12, 18.65], [1.69865214E12, 19.0], [1.698657E12, 18.0], [1.69865316E12, 33.0], [1.69865538E12, 17.0], [1.6986576E12, 16.0], [1.69865286E12, 17.0], [1.69865508E12, 16.0], [1.6986555E12, 18.0], [1.69865226E12, 18.0], [1.69865742E12, 17.0], [1.69865298E12, 35.0], [1.6986552E12, 17.0], [1.69865712E12, 16.0], [1.69865238E12, 19.0], [1.69865208E12, 19.0], [1.69865724E12, 17.199999999999932], [1.69865694E12, 19.0], [1.69865754E12, 15.0], [1.69865502E12, 20.450000000000045], [1.6986531E12, 34.0], [1.69865532E12, 16.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69865766E12, 2.0], [1.6986528E12, 2.0], [1.6986522E12, 2.0], [1.69865514E12, 1.0], [1.69865322E12, 1.0], [1.69865544E12, 1.0], [1.69865292E12, 1.0], [1.69865736E12, 2.0], [1.69865706E12, 2.0], [1.69865556E12, 1.0], [1.69865232E12, 2.0], [1.69865202E12, 3.0], [1.69865748E12, 1.0], [1.69865718E12, 2.0], [1.69865526E12, 1.0], [1.69865304E12, 1.0], [1.69865496E12, 1.0], [1.69865244E12, 2.0], [1.69865214E12, 3.0], [1.698657E12, 2.0], [1.69865316E12, 1.0], [1.69865538E12, 1.0], [1.6986576E12, 2.0], [1.69865286E12, 2.0], [1.69865508E12, 2.0], [1.6986555E12, 1.0], [1.69865226E12, 2.0], [1.69865742E12, 1.0], [1.69865298E12, 1.0], [1.6986552E12, 1.0], [1.69865712E12, 2.0], [1.69865238E12, 2.0], [1.69865208E12, 2.0], [1.69865724E12, 2.0], [1.69865694E12, 2.0], [1.69865754E12, 1.0], [1.69865502E12, 1.0], [1.6986531E12, 1.0], [1.69865532E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69865766E12, 3.0], [1.6986528E12, 5.0], [1.6986522E12, 4.0], [1.69865514E12, 4.0], [1.69865322E12, 4.0], [1.69865544E12, 4.0], [1.69865292E12, 5.0], [1.69865736E12, 4.0], [1.69865706E12, 4.0], [1.69865556E12, 4.0], [1.69865232E12, 4.0], [1.69865202E12, 8.0], [1.69865748E12, 4.0], [1.69865718E12, 4.0], [1.69865526E12, 4.0], [1.69865304E12, 4.0], [1.69865496E12, 4.0], [1.69865244E12, 5.0], [1.69865214E12, 5.0], [1.698657E12, 4.0], [1.69865316E12, 4.0], [1.69865538E12, 4.0], [1.6986576E12, 4.0], [1.69865286E12, 5.0], [1.69865508E12, 4.0], [1.6986555E12, 4.0], [1.69865226E12, 4.0], [1.69865742E12, 4.0], [1.69865298E12, 4.0], [1.6986552E12, 4.0], [1.69865712E12, 4.0], [1.69865238E12, 4.0], [1.69865208E12, 5.0], [1.69865724E12, 4.0], [1.69865694E12, 5.0], [1.69865754E12, 3.0], [1.69865502E12, 4.0], [1.6986531E12, 4.0], [1.69865532E12, 4.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69865766E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 2.0, "maxY": 683.0, "series": [{"data": [[2.0, 12.0], [4.0, 11.0], [5.0, 4.0], [6.0, 6.0], [7.0, 4.0], [8.0, 10.5], [9.0, 18.0], [11.0, 7.0], [12.0, 4.0], [14.0, 5.0], [15.0, 4.0], [16.0, 4.0], [17.0, 4.0], [18.0, 4.0], [19.0, 4.0], [20.0, 5.0], [21.0, 4.0], [22.0, 4.0], [23.0, 4.0], [24.0, 5.0], [25.0, 6.0], [26.0, 5.0], [27.0, 5.0], [28.0, 4.0], [29.0, 4.0], [30.0, 4.0], [31.0, 4.0], [32.0, 4.0], [33.0, 4.0], [35.0, 4.0], [34.0, 5.0], [37.0, 4.0], [36.0, 4.0], [39.0, 4.0], [38.0, 4.0], [40.0, 4.0], [49.0, 4.0], [51.0, 4.0], [50.0, 4.0], [53.0, 6.0], [52.0, 5.0], [87.0, 4.0], [91.0, 4.0], [113.0, 4.0], [125.0, 5.0], [128.0, 4.0], [141.0, 4.0], [140.0, 4.0], [161.0, 4.0], [162.0, 4.0], [160.0, 4.0], [165.0, 3.0], [163.0, 4.0], [168.0, 6.0], [187.0, 5.0], [193.0, 4.0], [211.0, 6.0], [208.0, 5.0], [220.0, 6.0], [226.0, 5.0], [224.0, 5.0], [230.0, 4.0], [246.0, 4.0], [375.0, 4.0], [393.0, 5.0], [394.0, 5.0], [391.0, 5.0], [388.0, 5.0], [396.0, 4.0], [400.0, 5.0], [411.0, 5.0], [402.0, 5.0], [413.0, 6.0], [414.0, 3.0], [412.0, 4.0], [421.0, 4.0], [429.0, 4.0], [420.0, 4.0], [419.0, 5.0], [433.0, 4.0], [439.0, 4.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 608.0], [33.0, 618.5], [2.0, 644.5], [35.0, 616.0], [34.0, 613.5], [37.0, 602.0], [36.0, 610.0], [39.0, 607.0], [38.0, 596.0], [40.0, 614.5], [51.0, 647.0], [53.0, 602.0], [87.0, 611.0], [91.0, 673.5], [141.0, 623.5], [168.0, 564.0], [187.0, 574.0], [12.0, 683.0], [193.0, 653.0], [208.0, 619.0], [226.0, 611.0], [230.0, 584.0], [14.0, 622.0], [246.0, 614.5], [15.0, 613.5], [16.0, 608.0], [17.0, 623.0], [18.0, 614.0], [19.0, 609.0], [20.0, 618.0], [21.0, 614.0], [22.0, 607.0], [23.0, 607.0], [24.0, 616.0], [25.0, 602.0], [26.0, 623.0], [27.0, 622.0], [28.0, 622.0], [29.0, 614.0], [30.0, 597.5], [31.0, 609.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 439.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 2.0, "maxY": 683.0, "series": [{"data": [[2.0, 12.0], [4.0, 11.0], [5.0, 4.0], [6.0, 6.0], [7.0, 4.0], [8.0, 10.5], [9.0, 18.0], [11.0, 7.0], [12.0, 4.0], [14.0, 5.0], [15.0, 4.0], [16.0, 4.0], [17.0, 4.0], [18.0, 4.0], [19.0, 4.0], [20.0, 5.0], [21.0, 4.0], [22.0, 4.0], [23.0, 4.0], [24.0, 5.0], [25.0, 6.0], [26.0, 5.0], [27.0, 5.0], [28.0, 4.0], [29.0, 4.0], [30.0, 4.0], [31.0, 4.0], [32.0, 4.0], [33.0, 4.0], [35.0, 4.0], [34.0, 4.5], [37.0, 4.0], [36.0, 4.0], [39.0, 4.0], [38.0, 4.0], [40.0, 4.0], [49.0, 4.0], [51.0, 4.0], [50.0, 4.0], [53.0, 6.0], [52.0, 5.0], [87.0, 4.0], [91.0, 4.0], [113.0, 4.0], [125.0, 5.0], [128.0, 4.0], [141.0, 4.0], [140.0, 4.0], [161.0, 4.0], [162.0, 4.0], [160.0, 4.0], [165.0, 3.0], [163.0, 4.0], [168.0, 6.0], [187.0, 5.0], [193.0, 4.0], [211.0, 6.0], [208.0, 5.0], [220.0, 6.0], [226.0, 5.0], [224.0, 5.0], [230.0, 4.0], [246.0, 4.0], [375.0, 4.0], [393.0, 5.0], [394.0, 5.0], [391.0, 5.0], [388.0, 5.0], [396.0, 4.0], [400.0, 5.0], [411.0, 5.0], [402.0, 5.0], [413.0, 6.0], [414.0, 3.0], [412.0, 4.0], [421.0, 4.0], [429.0, 4.0], [420.0, 4.0], [419.0, 5.0], [433.0, 4.0], [439.0, 4.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 608.0], [33.0, 618.5], [2.0, 644.5], [35.0, 616.0], [34.0, 613.5], [37.0, 602.0], [36.0, 610.0], [39.0, 607.0], [38.0, 596.0], [40.0, 614.5], [51.0, 647.0], [53.0, 602.0], [87.0, 611.0], [91.0, 673.5], [141.0, 623.5], [168.0, 564.0], [187.0, 574.0], [12.0, 683.0], [193.0, 653.0], [208.0, 619.0], [226.0, 610.5], [230.0, 584.0], [14.0, 622.0], [246.0, 614.5], [15.0, 613.5], [16.0, 608.0], [17.0, 623.0], [18.0, 614.0], [19.0, 609.0], [20.0, 618.0], [21.0, 614.0], [22.0, 607.0], [23.0, 607.0], [24.0, 615.0], [25.0, 602.0], [26.0, 623.0], [27.0, 622.0], [28.0, 622.0], [29.0, 613.5], [30.0, 597.5], [31.0, 609.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 439.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.7666666666666667, "minX": 1.69865202E12, "maxY": 70.81666666666666, "series": [{"data": [[1.69865766E12, 23.7], [1.6986528E12, 11.016666666666667], [1.6986522E12, 5.0], [1.69865514E12, 30.516666666666666], [1.69865322E12, 19.333333333333332], [1.69865544E12, 29.8], [1.69865292E12, 55.21666666666667], [1.69865736E12, 6.216666666666667], [1.69865706E12, 29.933333333333334], [1.69865556E12, 12.75], [1.69865232E12, 5.0], [1.69865202E12, 10.216666666666667], [1.69865748E12, 25.283333333333335], [1.69865718E12, 29.966666666666665], [1.69865526E12, 24.033333333333335], [1.69865304E12, 62.38333333333333], [1.69865496E12, 70.81666666666666], [1.69865244E12, 0.7666666666666667], [1.69865214E12, 4.3], [1.698657E12, 25.283333333333335], [1.69865316E12, 62.2], [1.69865538E12, 25.266666666666666], [1.6986576E12, 25.233333333333334], [1.69865286E12, 20.0], [1.69865508E12, 30.133333333333333], [1.6986555E12, 25.25], [1.69865226E12, 5.0], [1.69865742E12, 29.966666666666665], [1.69865298E12, 61.86666666666667], [1.6986552E12, 40.5], [1.69865712E12, 25.3], [1.69865238E12, 5.0], [1.69865208E12, 18.716666666666665], [1.69865724E12, 2.283333333333333], [1.69865694E12, 27.583333333333332], [1.69865754E12, 29.95], [1.69865502E12, 30.083333333333332], [1.6986531E12, 62.55], [1.69865532E12, 29.933333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69865766E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.7666666666666667, "minX": 1.69865202E12, "maxY": 67.05, "series": [{"data": [[1.69865766E12, 23.7], [1.6986528E12, 11.016666666666667], [1.6986522E12, 5.0], [1.69865514E12, 26.766666666666666], [1.69865322E12, 14.5], [1.69865544E12, 29.8], [1.69865292E12, 51.13333333333333], [1.69865736E12, 6.216666666666667], [1.69865706E12, 29.95], [1.69865556E12, 12.75], [1.69865232E12, 5.0], [1.69865202E12, 10.2], [1.69865748E12, 23.566666666666666], [1.69865718E12, 29.95], [1.69865526E12, 23.116666666666667], [1.69865304E12, 55.166666666666664], [1.69865496E12, 67.05], [1.69865244E12, 0.7666666666666667], [1.69865214E12, 4.3], [1.698657E12, 23.583333333333332], [1.69865316E12, 55.05], [1.69865538E12, 23.533333333333335], [1.6986576E12, 23.533333333333335], [1.69865286E12, 20.0], [1.69865508E12, 30.116666666666667], [1.6986555E12, 23.516666666666666], [1.69865226E12, 5.0], [1.69865742E12, 29.966666666666665], [1.69865298E12, 54.766666666666666], [1.6986552E12, 38.75], [1.69865712E12, 23.566666666666666], [1.69865238E12, 5.0], [1.69865208E12, 18.733333333333334], [1.69865724E12, 2.3], [1.69865694E12, 27.583333333333332], [1.69865754E12, 29.95], [1.69865502E12, 24.833333333333332], [1.6986531E12, 55.333333333333336], [1.69865532E12, 29.933333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.698657E12, 1.6833333333333333], [1.69865316E12, 7.15], [1.69865538E12, 1.7333333333333334], [1.6986576E12, 1.7], [1.69865514E12, 3.75], [1.6986555E12, 1.7333333333333334], [1.69865322E12, 4.916666666666667], [1.69865292E12, 4.0], [1.69865748E12, 1.7166666666666666], [1.69865298E12, 7.1], [1.6986552E12, 1.7666666666666666], [1.69865526E12, 0.9166666666666666], [1.69865712E12, 1.7333333333333334], [1.69865304E12, 7.216666666666667], [1.69865496E12, 3.683333333333333], [1.69865502E12, 5.333333333333333], [1.6986531E12, 7.216666666666667]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69865766E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.69865202E12, "maxY": 17.683333333333334, "series": [{"data": [[1.69865766E12, 5.916666666666667], [1.6986528E12, 2.7333333333333334], [1.6986522E12, 1.25], [1.69865514E12, 7.616666666666666], [1.69865322E12, 4.833333333333333], [1.69865544E12, 7.45], [1.69865292E12, 13.783333333333333], [1.69865736E12, 1.55], [1.69865706E12, 7.466666666666667], [1.69865556E12, 3.183333333333333], [1.69865232E12, 1.25], [1.69865202E12, 2.533333333333333], [1.69865748E12, 6.333333333333333], [1.69865718E12, 7.483333333333333], [1.69865526E12, 6.0], [1.69865304E12, 15.6], [1.69865496E12, 17.683333333333334], [1.69865244E12, 0.16666666666666666], [1.69865214E12, 1.0833333333333333], [1.698657E12, 6.333333333333333], [1.69865316E12, 15.55], [1.69865538E12, 6.316666666666666], [1.6986576E12, 6.333333333333333], [1.69865286E12, 5.0], [1.69865508E12, 7.516666666666667], [1.6986555E12, 6.316666666666666], [1.69865226E12, 1.25], [1.69865742E12, 7.466666666666667], [1.69865298E12, 15.466666666666667], [1.6986552E12, 10.15], [1.69865712E12, 6.333333333333333], [1.69865238E12, 1.25], [1.69865208E12, 4.683333333333334], [1.69865724E12, 0.5833333333333334], [1.69865694E12, 6.883333333333334], [1.69865754E12, 7.483333333333333], [1.69865502E12, 7.516666666666667], [1.6986531E12, 15.633333333333333], [1.69865532E12, 7.466666666666667]], "isOverall": false, "label": "SpanNames-success", "isController": false}, {"data": [[1.698657E12, 1.6833333333333333], [1.69865316E12, 7.15], [1.69865538E12, 1.7333333333333334], [1.6986576E12, 1.7], [1.69865514E12, 3.75], [1.6986555E12, 1.7333333333333334], [1.69865322E12, 4.916666666666667], [1.69865292E12, 4.0], [1.69865748E12, 1.7166666666666666], [1.69865298E12, 7.1], [1.6986552E12, 1.7666666666666666], [1.69865526E12, 0.9166666666666666], [1.69865712E12, 1.7333333333333334], [1.69865304E12, 7.216666666666667], [1.69865496E12, 3.683333333333333], [1.69865502E12, 5.333333333333333], [1.6986531E12, 7.216666666666667]], "isOverall": false, "label": "ServiceNames-failure", "isController": false}, {"data": [[1.69865766E12, 5.916666666666667], [1.6986528E12, 2.7666666666666666], [1.6986522E12, 1.25], [1.69865514E12, 7.633333333333334], [1.69865322E12, 4.833333333333333], [1.69865544E12, 7.45], [1.69865292E12, 13.783333333333333], [1.69865736E12, 1.5666666666666667], [1.69865706E12, 7.5], [1.69865556E12, 3.183333333333333], [1.69865232E12, 1.25], [1.69865202E12, 2.566666666666667], [1.69865748E12, 6.316666666666666], [1.69865718E12, 7.5], [1.69865526E12, 6.033333333333333], [1.69865304E12, 15.6], [1.69865496E12, 17.683333333333334], [1.69865244E12, 0.18333333333333332], [1.69865214E12, 1.0833333333333333], [1.698657E12, 6.316666666666666], [1.69865316E12, 15.55], [1.69865538E12, 6.316666666666666], [1.6986576E12, 6.3], [1.69865286E12, 5.0], [1.69865508E12, 7.533333333333333], [1.6986555E12, 6.3], [1.69865226E12, 1.25], [1.69865742E12, 7.5], [1.69865298E12, 15.466666666666667], [1.6986552E12, 10.133333333333333], [1.69865712E12, 6.283333333333333], [1.69865238E12, 1.25], [1.69865208E12, 4.683333333333334], [1.69865724E12, 0.5833333333333334], [1.69865694E12, 6.916666666666667], [1.69865754E12, 7.483333333333333], [1.69865502E12, 7.55], [1.6986531E12, 15.633333333333333], [1.69865532E12, 7.5]], "isOverall": false, "label": "RemoteServiceNames-success", "isController": false}, {"data": [[1.69865766E12, 5.933333333333334], [1.6986528E12, 2.783333333333333], [1.6986522E12, 1.25], [1.69865514E12, 3.8833333333333333], [1.69865544E12, 7.45], [1.69865292E12, 9.783333333333333], [1.69865736E12, 1.5833333333333333], [1.69865706E12, 7.5], [1.69865556E12, 3.183333333333333], [1.69865232E12, 1.25], [1.69865202E12, 2.5833333333333335], [1.69865748E12, 4.6], [1.69865718E12, 7.483333333333333], [1.69865526E12, 5.116666666666666], [1.69865304E12, 8.383333333333333], [1.69865496E12, 14.0], [1.69865244E12, 0.2], [1.69865214E12, 1.1], [1.698657E12, 4.616666666666666], [1.69865316E12, 8.4], [1.69865538E12, 4.583333333333333], [1.6986576E12, 4.583333333333333], [1.69865286E12, 5.0], [1.69865508E12, 7.566666666666666], [1.6986555E12, 4.583333333333333], [1.69865226E12, 1.25], [1.69865742E12, 7.5], [1.69865298E12, 8.366666666666667], [1.6986552E12, 8.35], [1.69865712E12, 4.6], [1.69865238E12, 1.25], [1.69865208E12, 4.683333333333334], [1.69865724E12, 0.55], [1.69865694E12, 6.933333333333334], [1.69865754E12, 7.5], [1.69865502E12, 2.25], [1.6986531E12, 8.416666666666666], [1.69865532E12, 7.5]], "isOverall": false, "label": "ServiceNames-success", "isController": false}, {"data": [[1.69865766E12, 5.933333333333334], [1.6986528E12, 2.7333333333333334], [1.6986522E12, 1.25], [1.69865514E12, 7.633333333333334], [1.69865322E12, 4.833333333333333], [1.69865544E12, 7.45], [1.69865292E12, 13.783333333333333], [1.69865736E12, 1.5166666666666666], [1.69865706E12, 7.483333333333333], [1.69865556E12, 3.2], [1.69865232E12, 1.25], [1.69865202E12, 2.5166666666666666], [1.69865748E12, 6.316666666666666], [1.69865718E12, 7.483333333333333], [1.69865526E12, 5.966666666666667], [1.69865304E12, 15.583333333333334], [1.69865496E12, 17.683333333333334], [1.69865244E12, 0.21666666666666667], [1.69865214E12, 1.0333333333333334], [1.698657E12, 6.316666666666666], [1.69865316E12, 15.55], [1.69865538E12, 6.316666666666666], [1.6986576E12, 6.316666666666666], [1.69865286E12, 5.0], [1.69865508E12, 7.5], [1.6986555E12, 6.316666666666666], [1.69865226E12, 1.25], [1.69865742E12, 7.5], [1.69865298E12, 15.466666666666667], [1.6986552E12, 10.116666666666667], [1.69865712E12, 6.35], [1.69865238E12, 1.25], [1.69865208E12, 4.683333333333334], [1.69865724E12, 0.5833333333333334], [1.69865694E12, 6.85], [1.69865754E12, 7.483333333333333], [1.69865502E12, 7.516666666666667], [1.6986531E12, 15.65], [1.69865532E12, 7.466666666666667]], "isOverall": false, "label": "TracesQuery-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69865766E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.7666666666666667, "minX": 1.69865202E12, "maxY": 67.05, "series": [{"data": [[1.69865766E12, 23.7], [1.6986528E12, 11.016666666666667], [1.6986522E12, 5.0], [1.69865514E12, 26.766666666666666], [1.69865322E12, 14.5], [1.69865544E12, 29.8], [1.69865292E12, 51.13333333333333], [1.69865736E12, 6.216666666666667], [1.69865706E12, 29.95], [1.69865556E12, 12.75], [1.69865232E12, 5.0], [1.69865202E12, 10.2], [1.69865748E12, 23.566666666666666], [1.69865718E12, 29.95], [1.69865526E12, 23.116666666666667], [1.69865304E12, 55.166666666666664], [1.69865496E12, 67.05], [1.69865244E12, 0.7666666666666667], [1.69865214E12, 4.3], [1.698657E12, 23.583333333333332], [1.69865316E12, 55.05], [1.69865538E12, 23.533333333333335], [1.6986576E12, 23.533333333333335], [1.69865286E12, 20.0], [1.69865508E12, 30.116666666666667], [1.6986555E12, 23.516666666666666], [1.69865226E12, 5.0], [1.69865742E12, 29.966666666666665], [1.69865298E12, 54.766666666666666], [1.6986552E12, 38.75], [1.69865712E12, 23.566666666666666], [1.69865238E12, 5.0], [1.69865208E12, 18.733333333333334], [1.69865724E12, 2.3], [1.69865694E12, 27.583333333333332], [1.69865754E12, 29.95], [1.69865502E12, 24.833333333333332], [1.6986531E12, 55.333333333333336], [1.69865532E12, 29.933333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.698657E12, 1.6833333333333333], [1.69865316E12, 7.15], [1.69865538E12, 1.7333333333333334], [1.6986576E12, 1.7], [1.69865514E12, 3.75], [1.6986555E12, 1.7333333333333334], [1.69865322E12, 4.916666666666667], [1.69865292E12, 4.0], [1.69865748E12, 1.7166666666666666], [1.69865298E12, 7.1], [1.6986552E12, 1.7666666666666666], [1.69865526E12, 0.9166666666666666], [1.69865712E12, 1.7333333333333334], [1.69865304E12, 7.216666666666667], [1.69865496E12, 3.683333333333333], [1.69865502E12, 5.333333333333333], [1.6986531E12, 7.216666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69865766E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

